[{"name":"abstract operator fun component1(): A","description":"nz.adjmunro.kty.tuple.Tuple.Tuple2d.component1","location":"kty/nz.adjmunro.kty.tuple/-tuple/-tuple2d/component1.html","searchKeys":["component1","abstract operator fun component1(): A","nz.adjmunro.kty.tuple.Tuple.Tuple2d.component1"]},{"name":"abstract operator fun component2(): B","description":"nz.adjmunro.kty.tuple.Tuple.Tuple2d.component2","location":"kty/nz.adjmunro.kty.tuple/-tuple/-tuple2d/component2.html","searchKeys":["component2","abstract operator fun component2(): B","nz.adjmunro.kty.tuple.Tuple.Tuple2d.component2"]},{"name":"abstract operator fun component3(): C","description":"nz.adjmunro.kty.tuple.Tuple.Tuple3d.component3","location":"kty/nz.adjmunro.kty.tuple/-tuple/-tuple3d/component3.html","searchKeys":["component3","abstract operator fun component3(): C","nz.adjmunro.kty.tuple.Tuple.Tuple3d.component3"]},{"name":"abstract operator fun component4(): D","description":"nz.adjmunro.kty.tuple.Tuple.Tuple4d.component4","location":"kty/nz.adjmunro.kty.tuple/-tuple/-tuple4d/component4.html","searchKeys":["component4","abstract operator fun component4(): D","nz.adjmunro.kty.tuple.Tuple.Tuple4d.component4"]},{"name":"abstract operator fun component5(): E","description":"nz.adjmunro.kty.tuple.Tuple.Tuple5d.component5","location":"kty/nz.adjmunro.kty.tuple/-tuple/-tuple5d/component5.html","searchKeys":["component5","abstract operator fun component5(): E","nz.adjmunro.kty.tuple.Tuple.Tuple5d.component5"]},{"name":"abstract operator fun component6(): F","description":"nz.adjmunro.kty.tuple.Tuple.Tuple6d.component6","location":"kty/nz.adjmunro.kty.tuple/-tuple/-tuple6d/component6.html","searchKeys":["component6","abstract operator fun component6(): F","nz.adjmunro.kty.tuple.Tuple.Tuple6d.component6"]},{"name":"abstract operator fun component7(): G","description":"nz.adjmunro.kty.tuple.Tuple.Tuple7d.component7","location":"kty/nz.adjmunro.kty.tuple/-tuple/-tuple7d/component7.html","searchKeys":["component7","abstract operator fun component7(): G","nz.adjmunro.kty.tuple.Tuple.Tuple7d.component7"]},{"name":"abstract operator fun component8(): H","description":"nz.adjmunro.kty.tuple.Tuple.Tuple8d.component8","location":"kty/nz.adjmunro.kty.tuple/-tuple/-tuple8d/component8.html","searchKeys":["component8","abstract operator fun component8(): H","nz.adjmunro.kty.tuple.Tuple.Tuple8d.component8"]},{"name":"abstract operator fun component9(): I","description":"nz.adjmunro.kty.tuple.Tuple.Tuple9d.component9","location":"kty/nz.adjmunro.kty.tuple/-tuple/-tuple9d/component9.html","searchKeys":["component9","abstract operator fun component9(): I","nz.adjmunro.kty.tuple.Tuple.Tuple9d.component9"]},{"name":"abstract operator fun invoke(a: A, b: B): A","description":"nz.adjmunro.kty.functions.MergeABtoA.invoke","location":"kty/nz.adjmunro.kty.functions/-merge-a-bto-a/invoke.html","searchKeys":["invoke","abstract operator fun invoke(a: A, b: B): A","nz.adjmunro.kty.functions.MergeABtoA.invoke"]},{"name":"abstract operator fun invoke(a: A, b: B): Int","description":"nz.adjmunro.kty.functions.DifferenceAB.invoke","location":"kty/nz.adjmunro.kty.functions/-difference-a-b/invoke.html","searchKeys":["invoke","abstract operator fun invoke(a: A, b: B): Int","nz.adjmunro.kty.functions.DifferenceAB.invoke"]},{"name":"abstract override val value: Double","description":"nz.adjmunro.kty.Doubly.value","location":"kty/nz.adjmunro.kty/-doubly/value.html","searchKeys":["value","abstract override val value: Double","nz.adjmunro.kty.Doubly.value"]},{"name":"abstract override val value: Float","description":"nz.adjmunro.kty.Floaty.value","location":"kty/nz.adjmunro.kty/-floaty/value.html","searchKeys":["value","abstract override val value: Float","nz.adjmunro.kty.Floaty.value"]},{"name":"abstract override val value: Int","description":"nz.adjmunro.kty.Inty.value","location":"kty/nz.adjmunro.kty/-inty/value.html","searchKeys":["value","abstract override val value: Int","nz.adjmunro.kty.Inty.value"]},{"name":"abstract override val value: Long","description":"nz.adjmunro.kty.Longy.value","location":"kty/nz.adjmunro.kty/-longy/value.html","searchKeys":["value","abstract override val value: Long","nz.adjmunro.kty.Longy.value"]},{"name":"abstract val absolute: Transform<BackingField>","description":"nz.adjmunro.kty.functions.operators.plus.Absolutable.absolute","location":"kty/nz.adjmunro.kty.functions.operators.plus/-absolutable/absolute.html","searchKeys":["absolute","abstract val absolute: Transform<BackingField>","nz.adjmunro.kty.functions.operators.plus.Absolutable.absolute"]},{"name":"abstract val addByAny: MergeABtoA<BackingField, Any?>","description":"nz.adjmunro.kty.functions.operators.plus.AnyAddable.addByAny","location":"kty/nz.adjmunro.kty.functions.operators.plus/-any-addable/add-by-any.html","searchKeys":["addByAny","abstract val addByAny: MergeABtoA<BackingField, Any?>","nz.adjmunro.kty.functions.operators.plus.AnyAddable.addByAny"]},{"name":"abstract val addByNumber: MergeABtoA<BackingField, Number>","description":"nz.adjmunro.kty.functions.operators.plus.NumberAddable.addByNumber","location":"kty/nz.adjmunro.kty.functions.operators.plus/-number-addable/add-by-number.html","searchKeys":["addByNumber","abstract val addByNumber: MergeABtoA<BackingField, Number>","nz.adjmunro.kty.functions.operators.plus.NumberAddable.addByNumber"]},{"name":"abstract val asBigDecimal: BigDecimal","description":"nz.adjmunro.kty.functions.operators.cast.Floatable.asBigDecimal","location":"kty/nz.adjmunro.kty.functions.operators.cast/-floatable/as-big-decimal.html","searchKeys":["asBigDecimal","abstract val asBigDecimal: BigDecimal","nz.adjmunro.kty.functions.operators.cast.Floatable.asBigDecimal"]},{"name":"abstract val asBigInteger: BigInteger","description":"nz.adjmunro.kty.functions.operators.cast.Wholable.asBigInteger","location":"kty/nz.adjmunro.kty.functions.operators.cast/-wholable/as-big-integer.html","searchKeys":["asBigInteger","abstract val asBigInteger: BigInteger","nz.adjmunro.kty.functions.operators.cast.Wholable.asBigInteger"]},{"name":"abstract val asDouble: Double","description":"nz.adjmunro.kty.functions.operators.cast.Floatable.asDouble","location":"kty/nz.adjmunro.kty.functions.operators.cast/-floatable/as-double.html","searchKeys":["asDouble","abstract val asDouble: Double","nz.adjmunro.kty.functions.operators.cast.Floatable.asDouble"]},{"name":"abstract val asFloat: Float","description":"nz.adjmunro.kty.functions.operators.cast.Floatable.asFloat","location":"kty/nz.adjmunro.kty.functions.operators.cast/-floatable/as-float.html","searchKeys":["asFloat","abstract val asFloat: Float","nz.adjmunro.kty.functions.operators.cast.Floatable.asFloat"]},{"name":"abstract val asInt: Int","description":"nz.adjmunro.kty.functions.operators.cast.Wholable.asInt","location":"kty/nz.adjmunro.kty.functions.operators.cast/-wholable/as-int.html","searchKeys":["asInt","abstract val asInt: Int","nz.adjmunro.kty.functions.operators.cast.Wholable.asInt"]},{"name":"abstract val asLong: Long","description":"nz.adjmunro.kty.functions.operators.cast.Wholable.asLong","location":"kty/nz.adjmunro.kty.functions.operators.cast/-wholable/as-long.html","searchKeys":["asLong","abstract val asLong: Long","nz.adjmunro.kty.functions.operators.cast.Wholable.asLong"]},{"name":"abstract val compareByNumber: DifferenceAB<BackingField, Number>","description":"nz.adjmunro.kty.functions.operators.comparable.NumberComparable.compareByNumber","location":"kty/nz.adjmunro.kty.functions.operators.comparable/-number-comparable/compare-by-number.html","searchKeys":["compareByNumber","abstract val compareByNumber: DifferenceAB<BackingField, Number>","nz.adjmunro.kty.functions.operators.comparable.NumberComparable.compareByNumber"]},{"name":"abstract val compareByString: DifferenceAB<BackingField, String>","description":"nz.adjmunro.kty.functions.operators.comparable.StringComparable.compareByString","location":"kty/nz.adjmunro.kty.functions.operators.comparable/-string-comparable/compare-by-string.html","searchKeys":["compareByString","abstract val compareByString: DifferenceAB<BackingField, String>","nz.adjmunro.kty.functions.operators.comparable.StringComparable.compareByString"]},{"name":"abstract val compareToSelf: Difference<BackingField>","description":"nz.adjmunro.kty.functions.operators.comparable.BoxedComparable.compareToSelf","location":"kty/nz.adjmunro.kty.functions.operators.comparable/-boxed-comparable/compare-to-self.html","searchKeys":["compareToSelf","abstract val compareToSelf: Difference<BackingField>","nz.adjmunro.kty.functions.operators.comparable.BoxedComparable.compareToSelf"]},{"name":"abstract val decrement: Transform<BackingField>","description":"nz.adjmunro.kty.functions.operators.minus.Decrementable.decrement","location":"kty/nz.adjmunro.kty.functions.operators.minus/-decrementable/decrement.html","searchKeys":["decrement","abstract val decrement: Transform<BackingField>","nz.adjmunro.kty.functions.operators.minus.Decrementable.decrement"]},{"name":"abstract val divide: Merge<BackingField>","description":"nz.adjmunro.kty.functions.operators.div.Divisible.divide","location":"kty/nz.adjmunro.kty.functions.operators.div/-divisible/divide.html","searchKeys":["divide","abstract val divide: Merge<BackingField>","nz.adjmunro.kty.functions.operators.div.Divisible.divide"]},{"name":"abstract val divideByNumber: MergeABtoA<BackingField, Number>","description":"nz.adjmunro.kty.functions.operators.div.NumberDivisible.divideByNumber","location":"kty/nz.adjmunro.kty.functions.operators.div/-number-divisible/divide-by-number.html","searchKeys":["divideByNumber","abstract val divideByNumber: MergeABtoA<BackingField, Number>","nz.adjmunro.kty.functions.operators.div.NumberDivisible.divideByNumber"]},{"name":"abstract val increment: Transform<BackingField>","description":"nz.adjmunro.kty.functions.operators.plus.Incrementable.increment","location":"kty/nz.adjmunro.kty.functions.operators.plus/-incrementable/increment.html","searchKeys":["increment","abstract val increment: Transform<BackingField>","nz.adjmunro.kty.functions.operators.plus.Incrementable.increment"]},{"name":"abstract val minus: Merge<BackingField>","description":"nz.adjmunro.kty.functions.operators.minus.Subtractable.minus","location":"kty/nz.adjmunro.kty.functions.operators.minus/-subtractable/minus.html","searchKeys":["minus","abstract val minus: Merge<BackingField>","nz.adjmunro.kty.functions.operators.minus.Subtractable.minus"]},{"name":"abstract val multiplyByNumber: MergeABtoA<BackingField, Number>","description":"nz.adjmunro.kty.functions.operators.times.NumberMultipliable.multiplyByNumber","location":"kty/nz.adjmunro.kty.functions.operators.times/-number-multipliable/multiply-by-number.html","searchKeys":["multiplyByNumber","abstract val multiplyByNumber: MergeABtoA<BackingField, Number>","nz.adjmunro.kty.functions.operators.times.NumberMultipliable.multiplyByNumber"]},{"name":"abstract val negate: Transform<BackingField>","description":"nz.adjmunro.kty.functions.operators.minus.Negatable.negate","location":"kty/nz.adjmunro.kty.functions.operators.minus/-negatable/negate.html","searchKeys":["negate","abstract val negate: Transform<BackingField>","nz.adjmunro.kty.functions.operators.minus.Negatable.negate"]},{"name":"abstract val plus: Merge<BackingField>","description":"nz.adjmunro.kty.functions.operators.plus.Addable.plus","location":"kty/nz.adjmunro.kty.functions.operators.plus/-addable/plus.html","searchKeys":["plus","abstract val plus: Merge<BackingField>","nz.adjmunro.kty.functions.operators.plus.Addable.plus"]},{"name":"abstract val reconstruct: (BackingField) -> ActualWrapper","description":"nz.adjmunro.kty.functions.Reconstructable.reconstruct","location":"kty/nz.adjmunro.kty.functions/-reconstructable/reconstruct.html","searchKeys":["reconstruct","abstract val reconstruct: (BackingField) -> ActualWrapper","nz.adjmunro.kty.functions.Reconstructable.reconstruct"]},{"name":"abstract val reconstructor: (BackingField, BackingField) -> ActualWrapper","description":"nz.adjmunro.kty.tuple.numbery.Numbery2D.reconstructor","location":"kty/nz.adjmunro.kty.tuple.numbery/-numbery2-d/reconstructor.html","searchKeys":["reconstructor","abstract val reconstructor: (BackingField, BackingField) -> ActualWrapper","nz.adjmunro.kty.tuple.numbery.Numbery2D.reconstructor"]},{"name":"abstract val reconstructor: (BackingField, BackingField, BackingField) -> ActualWrapper","description":"nz.adjmunro.kty.tuple.numbery.Numbery3D.reconstructor","location":"kty/nz.adjmunro.kty.tuple.numbery/-numbery3-d/reconstructor.html","searchKeys":["reconstructor","abstract val reconstructor: (BackingField, BackingField, BackingField) -> ActualWrapper","nz.adjmunro.kty.tuple.numbery.Numbery3D.reconstructor"]},{"name":"abstract val reconstructor: (BackingField, BackingField, BackingField, BackingField) -> ActualWrapper","description":"nz.adjmunro.kty.tuple.numbery.Numbery4D.reconstructor","location":"kty/nz.adjmunro.kty.tuple.numbery/-numbery4-d/reconstructor.html","searchKeys":["reconstructor","abstract val reconstructor: (BackingField, BackingField, BackingField, BackingField) -> ActualWrapper","nz.adjmunro.kty.tuple.numbery.Numbery4D.reconstructor"]},{"name":"abstract val reconstructor: (BackingField, BackingField, BackingField, BackingField, BackingField) -> ActualWrapper","description":"nz.adjmunro.kty.tuple.numbery.Numbery5D.reconstructor","location":"kty/nz.adjmunro.kty.tuple.numbery/-numbery5-d/reconstructor.html","searchKeys":["reconstructor","abstract val reconstructor: (BackingField, BackingField, BackingField, BackingField, BackingField) -> ActualWrapper","nz.adjmunro.kty.tuple.numbery.Numbery5D.reconstructor"]},{"name":"abstract val remainder: Merge<BackingField>","description":"nz.adjmunro.kty.functions.operators.rem.Remainderable.remainder","location":"kty/nz.adjmunro.kty.functions.operators.rem/-remainderable/remainder.html","searchKeys":["remainder","abstract val remainder: Merge<BackingField>","nz.adjmunro.kty.functions.operators.rem.Remainderable.remainder"]},{"name":"abstract val remainderByNumber: MergeABtoA<BackingField, Number>","description":"nz.adjmunro.kty.functions.operators.rem.NumberRemainderable.remainderByNumber","location":"kty/nz.adjmunro.kty.functions.operators.rem/-number-remainderable/remainder-by-number.html","searchKeys":["remainderByNumber","abstract val remainderByNumber: MergeABtoA<BackingField, Number>","nz.adjmunro.kty.functions.operators.rem.NumberRemainderable.remainderByNumber"]},{"name":"abstract val roundToInt: () -> Int","description":"nz.adjmunro.kty.functions.operators.cast.RoundCastable.roundToInt","location":"kty/nz.adjmunro.kty.functions.operators.cast/-round-castable/round-to-int.html","searchKeys":["roundToInt","abstract val roundToInt: () -> Int","nz.adjmunro.kty.functions.operators.cast.RoundCastable.roundToInt"]},{"name":"abstract val roundToLong: () -> Long","description":"nz.adjmunro.kty.functions.operators.cast.RoundCastable.roundToLong","location":"kty/nz.adjmunro.kty.functions.operators.cast/-round-castable/round-to-long.html","searchKeys":["roundToLong","abstract val roundToLong: () -> Long","nz.adjmunro.kty.functions.operators.cast.RoundCastable.roundToLong"]},{"name":"abstract val sign: ActualWrapper","description":"nz.adjmunro.kty.Numbery.sign","location":"kty/nz.adjmunro.kty/-numbery/sign.html","searchKeys":["sign","abstract val sign: ActualWrapper","nz.adjmunro.kty.Numbery.sign"]},{"name":"abstract val size: Int","description":"nz.adjmunro.kty.tuple.Tuple.size","location":"kty/nz.adjmunro.kty.tuple/-tuple/size.html","searchKeys":["size","abstract val size: Int","nz.adjmunro.kty.tuple.Tuple.size"]},{"name":"abstract val spec: (Parent) -> Child","description":"nz.adjmunro.kty.functions.operators.cast.Specifiable.spec","location":"kty/nz.adjmunro.kty.functions.operators.cast/-specifiable/spec.html","searchKeys":["spec","abstract val spec: (Parent) -> Child","nz.adjmunro.kty.functions.operators.cast.Specifiable.spec"]},{"name":"abstract val subtractByNumber: MergeABtoA<BackingField, Number>","description":"nz.adjmunro.kty.functions.operators.minus.NumberSubtractable.subtractByNumber","location":"kty/nz.adjmunro.kty.functions.operators.minus/-number-subtractable/subtract-by-number.html","searchKeys":["subtractByNumber","abstract val subtractByNumber: MergeABtoA<BackingField, Number>","nz.adjmunro.kty.functions.operators.minus.NumberSubtractable.subtractByNumber"]},{"name":"abstract val times: Merge<BackingField>","description":"nz.adjmunro.kty.functions.operators.times.Multipliable.times","location":"kty/nz.adjmunro.kty.functions.operators.times/-multipliable/times.html","searchKeys":["times","abstract val times: Merge<BackingField>","nz.adjmunro.kty.functions.operators.times.Multipliable.times"]},{"name":"abstract val value: BackingField","description":"nz.adjmunro.kty.Boxed.value","location":"kty/nz.adjmunro.kty/-boxed/value.html","searchKeys":["value","abstract val value: BackingField","nz.adjmunro.kty.Boxed.value"]},{"name":"annotation class KtyDsl","description":"nz.adjmunro.kty.functions.KtyDsl","location":"kty/nz.adjmunro.kty.functions/-kty-dsl/index.html","searchKeys":["KtyDsl","annotation class KtyDsl","nz.adjmunro.kty.functions.KtyDsl"]},{"name":"constructor(first: A, second: B)","description":"nz.adjmunro.kty.tuple.Duple.Duple","location":"kty/nz.adjmunro.kty.tuple/-duple/-duple.html","searchKeys":["Duple","constructor(first: A, second: B)","nz.adjmunro.kty.tuple.Duple.Duple"]},{"name":"constructor(first: A, second: B, third: C)","description":"nz.adjmunro.kty.tuple.Truple.Truple","location":"kty/nz.adjmunro.kty.tuple/-truple/-truple.html","searchKeys":["Truple","constructor(first: A, second: B, third: C)","nz.adjmunro.kty.tuple.Truple.Truple"]},{"name":"constructor(first: A, second: B, third: C, fourth: D)","description":"nz.adjmunro.kty.tuple.Quadruple.Quadruple","location":"kty/nz.adjmunro.kty.tuple/-quadruple/-quadruple.html","searchKeys":["Quadruple","constructor(first: A, second: B, third: C, fourth: D)","nz.adjmunro.kty.tuple.Quadruple.Quadruple"]},{"name":"constructor(first: A, second: B, third: C, fourth: D, fifth: E)","description":"nz.adjmunro.kty.tuple.Quintuple.Quintuple","location":"kty/nz.adjmunro.kty.tuple/-quintuple/-quintuple.html","searchKeys":["Quintuple","constructor(first: A, second: B, third: C, fourth: D, fifth: E)","nz.adjmunro.kty.tuple.Quintuple.Quintuple"]},{"name":"constructor(first: A, second: B, third: C, fourth: D, fifth: E, sixth: F)","description":"nz.adjmunro.kty.tuple.Sextuple.Sextuple","location":"kty/nz.adjmunro.kty.tuple/-sextuple/-sextuple.html","searchKeys":["Sextuple","constructor(first: A, second: B, third: C, fourth: D, fifth: E, sixth: F)","nz.adjmunro.kty.tuple.Sextuple.Sextuple"]},{"name":"constructor(first: A, second: B, third: C, fourth: D, fifth: E, sixth: F, seventh: G)","description":"nz.adjmunro.kty.tuple.Septuple.Septuple","location":"kty/nz.adjmunro.kty.tuple/-septuple/-septuple.html","searchKeys":["Septuple","constructor(first: A, second: B, third: C, fourth: D, fifth: E, sixth: F, seventh: G)","nz.adjmunro.kty.tuple.Septuple.Septuple"]},{"name":"constructor(first: A, second: B, third: C, fourth: D, fifth: E, sixth: F, seventh: G, eighth: H)","description":"nz.adjmunro.kty.tuple.Octuple.Octuple","location":"kty/nz.adjmunro.kty.tuple/-octuple/-octuple.html","searchKeys":["Octuple","constructor(first: A, second: B, third: C, fourth: D, fifth: E, sixth: F, seventh: G, eighth: H)","nz.adjmunro.kty.tuple.Octuple.Octuple"]},{"name":"constructor(first: A, second: B, third: C, fourth: D, fifth: E, sixth: F, seventh: G, eighth: H, ninth: I)","description":"nz.adjmunro.kty.tuple.Nonuple.Nonuple","location":"kty/nz.adjmunro.kty.tuple/-nonuple/-nonuple.html","searchKeys":["Nonuple","constructor(first: A, second: B, third: C, fourth: D, fifth: E, sixth: F, seventh: G, eighth: H, ninth: I)","nz.adjmunro.kty.tuple.Nonuple.Nonuple"]},{"name":"constructor(value: Double)","description":"nz.adjmunro.kty.Angle.Degrees.Degrees","location":"kty/nz.adjmunro.kty/-angle/-degrees/-degrees.html","searchKeys":["Degrees","constructor(value: Double)","nz.adjmunro.kty.Angle.Degrees.Degrees"]},{"name":"constructor(value: Double)","description":"nz.adjmunro.kty.Angle.Radians.Radians","location":"kty/nz.adjmunro.kty/-angle/-radians/-radians.html","searchKeys":["Radians","constructor(value: Double)","nz.adjmunro.kty.Angle.Radians.Radians"]},{"name":"data class Duple<out A, out B>(val first: A, val second: B) : Tuple.Tuple2d<A, B> ","description":"nz.adjmunro.kty.tuple.Duple","location":"kty/nz.adjmunro.kty.tuple/-duple/index.html","searchKeys":["Duple","data class Duple<out A, out B>(val first: A, val second: B) : Tuple.Tuple2d<A, B> ","nz.adjmunro.kty.tuple.Duple"]},{"name":"data class Nonuple<out A, out B, out C, out D, out E, out F, out G, out H, out I>(val first: A, val second: B, val third: C, val fourth: D, val fifth: E, val sixth: F, val seventh: G, val eighth: H, val ninth: I) : Tuple.Tuple9d<A, B, C, D, E, F, G, H, I> ","description":"nz.adjmunro.kty.tuple.Nonuple","location":"kty/nz.adjmunro.kty.tuple/-nonuple/index.html","searchKeys":["Nonuple","data class Nonuple<out A, out B, out C, out D, out E, out F, out G, out H, out I>(val first: A, val second: B, val third: C, val fourth: D, val fifth: E, val sixth: F, val seventh: G, val eighth: H, val ninth: I) : Tuple.Tuple9d<A, B, C, D, E, F, G, H, I> ","nz.adjmunro.kty.tuple.Nonuple"]},{"name":"data class Octuple<out A, out B, out C, out D, out E, out F, out G, out H>(val first: A, val second: B, val third: C, val fourth: D, val fifth: E, val sixth: F, val seventh: G, val eighth: H) : Tuple.Tuple8d<A, B, C, D, E, F, G, H> ","description":"nz.adjmunro.kty.tuple.Octuple","location":"kty/nz.adjmunro.kty.tuple/-octuple/index.html","searchKeys":["Octuple","data class Octuple<out A, out B, out C, out D, out E, out F, out G, out H>(val first: A, val second: B, val third: C, val fourth: D, val fifth: E, val sixth: F, val seventh: G, val eighth: H) : Tuple.Tuple8d<A, B, C, D, E, F, G, H> ","nz.adjmunro.kty.tuple.Octuple"]},{"name":"data class Quadruple<out A, out B, out C, out D>(val first: A, val second: B, val third: C, val fourth: D) : Tuple.Tuple4d<A, B, C, D> ","description":"nz.adjmunro.kty.tuple.Quadruple","location":"kty/nz.adjmunro.kty.tuple/-quadruple/index.html","searchKeys":["Quadruple","data class Quadruple<out A, out B, out C, out D>(val first: A, val second: B, val third: C, val fourth: D) : Tuple.Tuple4d<A, B, C, D> ","nz.adjmunro.kty.tuple.Quadruple"]},{"name":"data class Quintuple<out A, out B, out C, out D, out E>(val first: A, val second: B, val third: C, val fourth: D, val fifth: E) : Tuple.Tuple5d<A, B, C, D, E> ","description":"nz.adjmunro.kty.tuple.Quintuple","location":"kty/nz.adjmunro.kty.tuple/-quintuple/index.html","searchKeys":["Quintuple","data class Quintuple<out A, out B, out C, out D, out E>(val first: A, val second: B, val third: C, val fourth: D, val fifth: E) : Tuple.Tuple5d<A, B, C, D, E> ","nz.adjmunro.kty.tuple.Quintuple"]},{"name":"data class Septuple<out A, out B, out C, out D, out E, out F, out G>(val first: A, val second: B, val third: C, val fourth: D, val fifth: E, val sixth: F, val seventh: G) : Tuple.Tuple7d<A, B, C, D, E, F, G> ","description":"nz.adjmunro.kty.tuple.Septuple","location":"kty/nz.adjmunro.kty.tuple/-septuple/index.html","searchKeys":["Septuple","data class Septuple<out A, out B, out C, out D, out E, out F, out G>(val first: A, val second: B, val third: C, val fourth: D, val fifth: E, val sixth: F, val seventh: G) : Tuple.Tuple7d<A, B, C, D, E, F, G> ","nz.adjmunro.kty.tuple.Septuple"]},{"name":"data class Sextuple<out A, out B, out C, out D, out E, out F>(val first: A, val second: B, val third: C, val fourth: D, val fifth: E, val sixth: F) : Tuple.Tuple6d<A, B, C, D, E, F> ","description":"nz.adjmunro.kty.tuple.Sextuple","location":"kty/nz.adjmunro.kty.tuple/-sextuple/index.html","searchKeys":["Sextuple","data class Sextuple<out A, out B, out C, out D, out E, out F>(val first: A, val second: B, val third: C, val fourth: D, val fifth: E, val sixth: F) : Tuple.Tuple6d<A, B, C, D, E, F> ","nz.adjmunro.kty.tuple.Sextuple"]},{"name":"data class Truple<out A, out B, out C>(val first: A, val second: B, val third: C) : Tuple.Tuple3d<A, B, C> ","description":"nz.adjmunro.kty.tuple.Truple","location":"kty/nz.adjmunro.kty.tuple/-truple/index.html","searchKeys":["Truple","data class Truple<out A, out B, out C>(val first: A, val second: B, val third: C) : Tuple.Tuple3d<A, B, C> ","nz.adjmunro.kty.tuple.Truple"]},{"name":"fun <A, B, C, D, E, F, G, H, I> tupleOf(first: A, second: B, third: C, fourth: D, fifth: E, sixth: F, seventh: G, eighth: H, ninth: I): Nonuple<A, B, C, D, E, F, G, H, I>","description":"nz.adjmunro.kty.tuple.tupleOf","location":"kty/nz.adjmunro.kty.tuple/tuple-of.html","searchKeys":["tupleOf","fun <A, B, C, D, E, F, G, H, I> tupleOf(first: A, second: B, third: C, fourth: D, fifth: E, sixth: F, seventh: G, eighth: H, ninth: I): Nonuple<A, B, C, D, E, F, G, H, I>","nz.adjmunro.kty.tuple.tupleOf"]},{"name":"fun <A, B, C, D, E, F, G, H> tupleOf(first: A, second: B, third: C, fourth: D, fifth: E, sixth: F, seventh: G, eighth: H): Octuple<A, B, C, D, E, F, G, H>","description":"nz.adjmunro.kty.tuple.tupleOf","location":"kty/nz.adjmunro.kty.tuple/tuple-of.html","searchKeys":["tupleOf","fun <A, B, C, D, E, F, G, H> tupleOf(first: A, second: B, third: C, fourth: D, fifth: E, sixth: F, seventh: G, eighth: H): Octuple<A, B, C, D, E, F, G, H>","nz.adjmunro.kty.tuple.tupleOf"]},{"name":"fun <A, B, C, D, E, F, G> tupleOf(first: A, second: B, third: C, fourth: D, fifth: E, sixth: F, seventh: G): Septuple<A, B, C, D, E, F, G>","description":"nz.adjmunro.kty.tuple.tupleOf","location":"kty/nz.adjmunro.kty.tuple/tuple-of.html","searchKeys":["tupleOf","fun <A, B, C, D, E, F, G> tupleOf(first: A, second: B, third: C, fourth: D, fifth: E, sixth: F, seventh: G): Septuple<A, B, C, D, E, F, G>","nz.adjmunro.kty.tuple.tupleOf"]},{"name":"fun <A, B, C, D, E, F> tupleOf(first: A, second: B, third: C, fourth: D, fifth: E, sixth: F): Sextuple<A, B, C, D, E, F>","description":"nz.adjmunro.kty.tuple.tupleOf","location":"kty/nz.adjmunro.kty.tuple/tuple-of.html","searchKeys":["tupleOf","fun <A, B, C, D, E, F> tupleOf(first: A, second: B, third: C, fourth: D, fifth: E, sixth: F): Sextuple<A, B, C, D, E, F>","nz.adjmunro.kty.tuple.tupleOf"]},{"name":"fun <A, B, C, D, E> tupleOf(first: A, second: B, third: C, fourth: D, fifth: E): Quintuple<A, B, C, D, E>","description":"nz.adjmunro.kty.tuple.tupleOf","location":"kty/nz.adjmunro.kty.tuple/tuple-of.html","searchKeys":["tupleOf","fun <A, B, C, D, E> tupleOf(first: A, second: B, third: C, fourth: D, fifth: E): Quintuple<A, B, C, D, E>","nz.adjmunro.kty.tuple.tupleOf"]},{"name":"fun <A, B, C, D> tupleOf(first: A, second: B, third: C, fourth: D): Quadruple<A, B, C, D>","description":"nz.adjmunro.kty.tuple.tupleOf","location":"kty/nz.adjmunro.kty.tuple/tuple-of.html","searchKeys":["tupleOf","fun <A, B, C, D> tupleOf(first: A, second: B, third: C, fourth: D): Quadruple<A, B, C, D>","nz.adjmunro.kty.tuple.tupleOf"]},{"name":"fun <A, B, C> Triple<A, B, C>.toTuple(): Truple<A, B, C>","description":"nz.adjmunro.kty.tuple.toTuple","location":"kty/nz.adjmunro.kty.tuple/to-tuple.html","searchKeys":["toTuple","fun <A, B, C> Triple<A, B, C>.toTuple(): Truple<A, B, C>","nz.adjmunro.kty.tuple.toTuple"]},{"name":"fun <A, B, C> Tuple.Tuple3d<A, B, C>.toTriple(): Triple<A, B, C>","description":"nz.adjmunro.kty.tuple.toTriple","location":"kty/nz.adjmunro.kty.tuple/to-triple.html","searchKeys":["toTriple","fun <A, B, C> Tuple.Tuple3d<A, B, C>.toTriple(): Triple<A, B, C>","nz.adjmunro.kty.tuple.toTriple"]},{"name":"fun <A, B, C> tupleOf(first: A, second: B, third: C): Truple<A, B, C>","description":"nz.adjmunro.kty.tuple.tupleOf","location":"kty/nz.adjmunro.kty.tuple/tuple-of.html","searchKeys":["tupleOf","fun <A, B, C> tupleOf(first: A, second: B, third: C): Truple<A, B, C>","nz.adjmunro.kty.tuple.tupleOf"]},{"name":"fun <A, B> Pair<A, B>.toTuple(): Duple<A, B>","description":"nz.adjmunro.kty.tuple.toTuple","location":"kty/nz.adjmunro.kty.tuple/to-tuple.html","searchKeys":["toTuple","fun <A, B> Pair<A, B>.toTuple(): Duple<A, B>","nz.adjmunro.kty.tuple.toTuple"]},{"name":"fun <A, B> Tuple.Tuple2d<A, B>.toPair(): Pair<A, B>","description":"nz.adjmunro.kty.tuple.toPair","location":"kty/nz.adjmunro.kty.tuple/to-pair.html","searchKeys":["toPair","fun <A, B> Tuple.Tuple2d<A, B>.toPair(): Pair<A, B>","nz.adjmunro.kty.tuple.toPair"]},{"name":"fun <A, B> tupleOf(first: A, second: B): Duple<A, B>","description":"nz.adjmunro.kty.tuple.tupleOf","location":"kty/nz.adjmunro.kty.tuple/tuple-of.html","searchKeys":["tupleOf","fun <A, B> tupleOf(first: A, second: B): Duple<A, B>","nz.adjmunro.kty.tuple.tupleOf"]},{"name":"fun <T> Tuple2<T>.toList(): List<T>","description":"nz.adjmunro.kty.tuple.toList","location":"kty/nz.adjmunro.kty.tuple/to-list.html","searchKeys":["toList","fun <T> Tuple2<T>.toList(): List<T>","nz.adjmunro.kty.tuple.toList"]},{"name":"fun <T> Tuple2<T>.toSequence(): Sequence<T>","description":"nz.adjmunro.kty.tuple.toSequence","location":"kty/nz.adjmunro.kty.tuple/to-sequence.html","searchKeys":["toSequence","fun <T> Tuple2<T>.toSequence(): Sequence<T>","nz.adjmunro.kty.tuple.toSequence"]},{"name":"fun <T> Tuple2<T>.toSet(): Set<T>","description":"nz.adjmunro.kty.tuple.toSet","location":"kty/nz.adjmunro.kty.tuple/to-set.html","searchKeys":["toSet","fun <T> Tuple2<T>.toSet(): Set<T>","nz.adjmunro.kty.tuple.toSet"]},{"name":"fun <T> Tuple3<T>.toList(): List<T>","description":"nz.adjmunro.kty.tuple.toList","location":"kty/nz.adjmunro.kty.tuple/to-list.html","searchKeys":["toList","fun <T> Tuple3<T>.toList(): List<T>","nz.adjmunro.kty.tuple.toList"]},{"name":"fun <T> Tuple3<T>.toSequence(): Sequence<T>","description":"nz.adjmunro.kty.tuple.toSequence","location":"kty/nz.adjmunro.kty.tuple/to-sequence.html","searchKeys":["toSequence","fun <T> Tuple3<T>.toSequence(): Sequence<T>","nz.adjmunro.kty.tuple.toSequence"]},{"name":"fun <T> Tuple3<T>.toSet(): Set<T>","description":"nz.adjmunro.kty.tuple.toSet","location":"kty/nz.adjmunro.kty.tuple/to-set.html","searchKeys":["toSet","fun <T> Tuple3<T>.toSet(): Set<T>","nz.adjmunro.kty.tuple.toSet"]},{"name":"fun <T> Tuple4<T>.toList(): List<T>","description":"nz.adjmunro.kty.tuple.toList","location":"kty/nz.adjmunro.kty.tuple/to-list.html","searchKeys":["toList","fun <T> Tuple4<T>.toList(): List<T>","nz.adjmunro.kty.tuple.toList"]},{"name":"fun <T> Tuple4<T>.toSequence(): Sequence<T>","description":"nz.adjmunro.kty.tuple.toSequence","location":"kty/nz.adjmunro.kty.tuple/to-sequence.html","searchKeys":["toSequence","fun <T> Tuple4<T>.toSequence(): Sequence<T>","nz.adjmunro.kty.tuple.toSequence"]},{"name":"fun <T> Tuple4<T>.toSet(): Set<T>","description":"nz.adjmunro.kty.tuple.toSet","location":"kty/nz.adjmunro.kty.tuple/to-set.html","searchKeys":["toSet","fun <T> Tuple4<T>.toSet(): Set<T>","nz.adjmunro.kty.tuple.toSet"]},{"name":"fun <T> Tuple5<T>.toList(): List<T>","description":"nz.adjmunro.kty.tuple.toList","location":"kty/nz.adjmunro.kty.tuple/to-list.html","searchKeys":["toList","fun <T> Tuple5<T>.toList(): List<T>","nz.adjmunro.kty.tuple.toList"]},{"name":"fun <T> Tuple5<T>.toSequence(): Sequence<T>","description":"nz.adjmunro.kty.tuple.toSequence","location":"kty/nz.adjmunro.kty.tuple/to-sequence.html","searchKeys":["toSequence","fun <T> Tuple5<T>.toSequence(): Sequence<T>","nz.adjmunro.kty.tuple.toSequence"]},{"name":"fun <T> Tuple5<T>.toSet(): Set<T>","description":"nz.adjmunro.kty.tuple.toSet","location":"kty/nz.adjmunro.kty.tuple/to-set.html","searchKeys":["toSet","fun <T> Tuple5<T>.toSet(): Set<T>","nz.adjmunro.kty.tuple.toSet"]},{"name":"fun <T> Tuple6<T>.toList(): List<T>","description":"nz.adjmunro.kty.tuple.toList","location":"kty/nz.adjmunro.kty.tuple/to-list.html","searchKeys":["toList","fun <T> Tuple6<T>.toList(): List<T>","nz.adjmunro.kty.tuple.toList"]},{"name":"fun <T> Tuple6<T>.toSequence(): Sequence<T>","description":"nz.adjmunro.kty.tuple.toSequence","location":"kty/nz.adjmunro.kty.tuple/to-sequence.html","searchKeys":["toSequence","fun <T> Tuple6<T>.toSequence(): Sequence<T>","nz.adjmunro.kty.tuple.toSequence"]},{"name":"fun <T> Tuple6<T>.toSet(): Set<T>","description":"nz.adjmunro.kty.tuple.toSet","location":"kty/nz.adjmunro.kty.tuple/to-set.html","searchKeys":["toSet","fun <T> Tuple6<T>.toSet(): Set<T>","nz.adjmunro.kty.tuple.toSet"]},{"name":"fun <T> Tuple7<T>.toList(): List<T>","description":"nz.adjmunro.kty.tuple.toList","location":"kty/nz.adjmunro.kty.tuple/to-list.html","searchKeys":["toList","fun <T> Tuple7<T>.toList(): List<T>","nz.adjmunro.kty.tuple.toList"]},{"name":"fun <T> Tuple7<T>.toSequence(): Sequence<T>","description":"nz.adjmunro.kty.tuple.toSequence","location":"kty/nz.adjmunro.kty.tuple/to-sequence.html","searchKeys":["toSequence","fun <T> Tuple7<T>.toSequence(): Sequence<T>","nz.adjmunro.kty.tuple.toSequence"]},{"name":"fun <T> Tuple7<T>.toSet(): Set<T>","description":"nz.adjmunro.kty.tuple.toSet","location":"kty/nz.adjmunro.kty.tuple/to-set.html","searchKeys":["toSet","fun <T> Tuple7<T>.toSet(): Set<T>","nz.adjmunro.kty.tuple.toSet"]},{"name":"fun <T> Tuple8<T>.toList(): List<T>","description":"nz.adjmunro.kty.tuple.toList","location":"kty/nz.adjmunro.kty.tuple/to-list.html","searchKeys":["toList","fun <T> Tuple8<T>.toList(): List<T>","nz.adjmunro.kty.tuple.toList"]},{"name":"fun <T> Tuple8<T>.toSequence(): Sequence<T>","description":"nz.adjmunro.kty.tuple.toSequence","location":"kty/nz.adjmunro.kty.tuple/to-sequence.html","searchKeys":["toSequence","fun <T> Tuple8<T>.toSequence(): Sequence<T>","nz.adjmunro.kty.tuple.toSequence"]},{"name":"fun <T> Tuple8<T>.toSet(): Set<T>","description":"nz.adjmunro.kty.tuple.toSet","location":"kty/nz.adjmunro.kty.tuple/to-set.html","searchKeys":["toSet","fun <T> Tuple8<T>.toSet(): Set<T>","nz.adjmunro.kty.tuple.toSet"]},{"name":"fun <T> Tuple9<T>.toList(): List<T>","description":"nz.adjmunro.kty.tuple.toList","location":"kty/nz.adjmunro.kty.tuple/to-list.html","searchKeys":["toList","fun <T> Tuple9<T>.toList(): List<T>","nz.adjmunro.kty.tuple.toList"]},{"name":"fun <T> Tuple9<T>.toSequence(): Sequence<T>","description":"nz.adjmunro.kty.tuple.toSequence","location":"kty/nz.adjmunro.kty.tuple/to-sequence.html","searchKeys":["toSequence","fun <T> Tuple9<T>.toSequence(): Sequence<T>","nz.adjmunro.kty.tuple.toSequence"]},{"name":"fun <T> Tuple9<T>.toSet(): Set<T>","description":"nz.adjmunro.kty.tuple.toSet","location":"kty/nz.adjmunro.kty.tuple/to-set.html","searchKeys":["toSet","fun <T> Tuple9<T>.toSet(): Set<T>","nz.adjmunro.kty.tuple.toSet"]},{"name":"fun <W : Numbery<W, *>> abs(a: W): W","description":"nz.adjmunro.kty.abs","location":"kty/nz.adjmunro.kty/abs.html","searchKeys":["abs","fun <W : Numbery<W, *>> abs(a: W): W","nz.adjmunro.kty.abs"]},{"name":"fun <W : Numbery<W, *>> max(a: W, b: Number): W","description":"nz.adjmunro.kty.max","location":"kty/nz.adjmunro.kty/max.html","searchKeys":["max","fun <W : Numbery<W, *>> max(a: W, b: Number): W","nz.adjmunro.kty.max"]},{"name":"fun <W : Numbery<W, *>> max(a: W, b: W): W","description":"nz.adjmunro.kty.max","location":"kty/nz.adjmunro.kty/max.html","searchKeys":["max","fun <W : Numbery<W, *>> max(a: W, b: W): W","nz.adjmunro.kty.max"]},{"name":"fun <W : Numbery<W, *>> min(a: W, b: Number): W","description":"nz.adjmunro.kty.min","location":"kty/nz.adjmunro.kty/min.html","searchKeys":["min","fun <W : Numbery<W, *>> min(a: W, b: Number): W","nz.adjmunro.kty.min"]},{"name":"fun <W : Numbery<W, *>> min(a: W, b: W): W","description":"nz.adjmunro.kty.min","location":"kty/nz.adjmunro.kty/min.html","searchKeys":["min","fun <W : Numbery<W, *>> min(a: W, b: W): W","nz.adjmunro.kty.min"]},{"name":"fun Angle<*>.asDegrees(): Angle.Degrees","description":"nz.adjmunro.kty.Angle.Companion.asDegrees","location":"kty/nz.adjmunro.kty/-angle/-companion/as-degrees.html","searchKeys":["asDegrees","fun Angle<*>.asDegrees(): Angle.Degrees","nz.adjmunro.kty.Angle.Companion.asDegrees"]},{"name":"fun Angle<*>.asRadians(): Angle.Radians","description":"nz.adjmunro.kty.Angle.Companion.asRadians","location":"kty/nz.adjmunro.kty/-angle/-companion/as-radians.html","searchKeys":["asRadians","fun Angle<*>.asRadians(): Angle.Radians","nz.adjmunro.kty.Angle.Companion.asRadians"]},{"name":"fun interface DifferenceAB<A, B>","description":"nz.adjmunro.kty.functions.DifferenceAB","location":"kty/nz.adjmunro.kty.functions/-difference-a-b/index.html","searchKeys":["DifferenceAB","fun interface DifferenceAB<A, B>","nz.adjmunro.kty.functions.DifferenceAB"]},{"name":"fun interface MergeABtoA<A, B>","description":"nz.adjmunro.kty.functions.MergeABtoA","location":"kty/nz.adjmunro.kty.functions/-merge-a-bto-a/index.html","searchKeys":["MergeABtoA","fun interface MergeABtoA<A, B>","nz.adjmunro.kty.functions.MergeABtoA"]},{"name":"interface Absolutable<ActualWrapper : Absolutable<ActualWrapper, BackingField>, BackingField> : Mergeable<ActualWrapper, BackingField> ","description":"nz.adjmunro.kty.functions.operators.plus.Absolutable","location":"kty/nz.adjmunro.kty.functions.operators.plus/-absolutable/index.html","searchKeys":["Absolutable","interface Absolutable<ActualWrapper : Absolutable<ActualWrapper, BackingField>, BackingField> : Mergeable<ActualWrapper, BackingField> ","nz.adjmunro.kty.functions.operators.plus.Absolutable"]},{"name":"interface Addable<ActualWrapper : Addable<ActualWrapper, BackingField>, BackingField> : Mergeable<ActualWrapper, BackingField> ","description":"nz.adjmunro.kty.functions.operators.plus.Addable","location":"kty/nz.adjmunro.kty.functions.operators.plus/-addable/index.html","searchKeys":["Addable","interface Addable<ActualWrapper : Addable<ActualWrapper, BackingField>, BackingField> : Mergeable<ActualWrapper, BackingField> ","nz.adjmunro.kty.functions.operators.plus.Addable"]},{"name":"interface AnyAddable<ActualWrapper : AnyAddable<ActualWrapper, BackingField>, BackingField> : AnyMergeable<ActualWrapper, BackingField> ","description":"nz.adjmunro.kty.functions.operators.plus.AnyAddable","location":"kty/nz.adjmunro.kty.functions.operators.plus/-any-addable/index.html","searchKeys":["AnyAddable","interface AnyAddable<ActualWrapper : AnyAddable<ActualWrapper, BackingField>, BackingField> : AnyMergeable<ActualWrapper, BackingField> ","nz.adjmunro.kty.functions.operators.plus.AnyAddable"]},{"name":"interface AnyMergeable<ActualWrapper : AnyMergeable<ActualWrapper, BackingField>, BackingField> : Boxed<ActualWrapper, BackingField> ","description":"nz.adjmunro.kty.functions.merge.AnyMergeable","location":"kty/nz.adjmunro.kty.functions.merge/-any-mergeable/index.html","searchKeys":["AnyMergeable","interface AnyMergeable<ActualWrapper : AnyMergeable<ActualWrapper, BackingField>, BackingField> : Boxed<ActualWrapper, BackingField> ","nz.adjmunro.kty.functions.merge.AnyMergeable"]},{"name":"interface Boxed<ActualWrapper : Boxed<ActualWrapper, BackingField>, BackingField> : Reconstructable<ActualWrapper, BackingField> ","description":"nz.adjmunro.kty.Boxed","location":"kty/nz.adjmunro.kty/-boxed/index.html","searchKeys":["Boxed","interface Boxed<ActualWrapper : Boxed<ActualWrapper, BackingField>, BackingField> : Reconstructable<ActualWrapper, BackingField> ","nz.adjmunro.kty.Boxed"]},{"name":"interface BoxedComparable<ActualWrapper : BoxedComparable<ActualWrapper, BackingField>, BackingField> : Boxed<ActualWrapper, BackingField> , Comparable<ActualWrapper> ","description":"nz.adjmunro.kty.functions.operators.comparable.BoxedComparable","location":"kty/nz.adjmunro.kty.functions.operators.comparable/-boxed-comparable/index.html","searchKeys":["BoxedComparable","interface BoxedComparable<ActualWrapper : BoxedComparable<ActualWrapper, BackingField>, BackingField> : Boxed<ActualWrapper, BackingField> , Comparable<ActualWrapper> ","nz.adjmunro.kty.functions.operators.comparable.BoxedComparable"]},{"name":"interface Decrementable<ActualWrapper : Decrementable<ActualWrapper, BackingField>, BackingField> : Mergeable<ActualWrapper, BackingField> ","description":"nz.adjmunro.kty.functions.operators.minus.Decrementable","location":"kty/nz.adjmunro.kty.functions.operators.minus/-decrementable/index.html","searchKeys":["Decrementable","interface Decrementable<ActualWrapper : Decrementable<ActualWrapper, BackingField>, BackingField> : Mergeable<ActualWrapper, BackingField> ","nz.adjmunro.kty.functions.operators.minus.Decrementable"]},{"name":"interface Divisible<ActualWrapper : Divisible<ActualWrapper, BackingField>, BackingField> : Mergeable<ActualWrapper, BackingField> ","description":"nz.adjmunro.kty.functions.operators.div.Divisible","location":"kty/nz.adjmunro.kty.functions.operators.div/-divisible/index.html","searchKeys":["Divisible","interface Divisible<ActualWrapper : Divisible<ActualWrapper, BackingField>, BackingField> : Mergeable<ActualWrapper, BackingField> ","nz.adjmunro.kty.functions.operators.div.Divisible"]},{"name":"interface Doubly<W : Doubly<W>> : Numbery<W, Double> , RoundCastable","description":"nz.adjmunro.kty.Doubly","location":"kty/nz.adjmunro.kty/-doubly/index.html","searchKeys":["Doubly","interface Doubly<W : Doubly<W>> : Numbery<W, Double> , RoundCastable","nz.adjmunro.kty.Doubly"]},{"name":"interface Floatable","description":"nz.adjmunro.kty.functions.operators.cast.Floatable","location":"kty/nz.adjmunro.kty.functions.operators.cast/-floatable/index.html","searchKeys":["Floatable","interface Floatable","nz.adjmunro.kty.functions.operators.cast.Floatable"]},{"name":"interface Floaty<W : Floaty<W>> : Numbery<W, Float> , RoundCastable","description":"nz.adjmunro.kty.Floaty","location":"kty/nz.adjmunro.kty/-floaty/index.html","searchKeys":["Floaty","interface Floaty<W : Floaty<W>> : Numbery<W, Float> , RoundCastable","nz.adjmunro.kty.Floaty"]},{"name":"interface Incrementable<ActualWrapper : Incrementable<ActualWrapper, BackingField>, BackingField> : Mergeable<ActualWrapper, BackingField> ","description":"nz.adjmunro.kty.functions.operators.plus.Incrementable","location":"kty/nz.adjmunro.kty.functions.operators.plus/-incrementable/index.html","searchKeys":["Incrementable","interface Incrementable<ActualWrapper : Incrementable<ActualWrapper, BackingField>, BackingField> : Mergeable<ActualWrapper, BackingField> ","nz.adjmunro.kty.functions.operators.plus.Incrementable"]},{"name":"interface Inty<W : Inty<W>> : Numbery<W, Int> ","description":"nz.adjmunro.kty.Inty","location":"kty/nz.adjmunro.kty/-inty/index.html","searchKeys":["Inty","interface Inty<W : Inty<W>> : Numbery<W, Int> ","nz.adjmunro.kty.Inty"]},{"name":"interface Longy<W : Longy<W>> : Numbery<W, Long> ","description":"nz.adjmunro.kty.Longy","location":"kty/nz.adjmunro.kty/-longy/index.html","searchKeys":["Longy","interface Longy<W : Longy<W>> : Numbery<W, Long> ","nz.adjmunro.kty.Longy"]},{"name":"interface Mathable<ActualWrapper : Mathable<ActualWrapper, BackingField>, BackingField> : Addable<ActualWrapper, BackingField> , Subtractable<ActualWrapper, BackingField> , Multipliable<ActualWrapper, BackingField> , Divisible<ActualWrapper, BackingField> , Remainderable<ActualWrapper, BackingField> ","description":"nz.adjmunro.kty.functions.operators.Mathable","location":"kty/nz.adjmunro.kty.functions.operators/-mathable/index.html","searchKeys":["Mathable","interface Mathable<ActualWrapper : Mathable<ActualWrapper, BackingField>, BackingField> : Addable<ActualWrapper, BackingField> , Subtractable<ActualWrapper, BackingField> , Multipliable<ActualWrapper, BackingField> , Divisible<ActualWrapper, BackingField> , Remainderable<ActualWrapper, BackingField> ","nz.adjmunro.kty.functions.operators.Mathable"]},{"name":"interface Mergeable<ActualWrapper : Mergeable<ActualWrapper, BackingField>, BackingField> : Boxed<ActualWrapper, BackingField> ","description":"nz.adjmunro.kty.functions.Mergeable","location":"kty/nz.adjmunro.kty.functions/-mergeable/index.html","searchKeys":["Mergeable","interface Mergeable<ActualWrapper : Mergeable<ActualWrapper, BackingField>, BackingField> : Boxed<ActualWrapper, BackingField> ","nz.adjmunro.kty.functions.Mergeable"]},{"name":"interface Multipliable<ActualWrapper : Multipliable<ActualWrapper, BackingField>, BackingField> : Mergeable<ActualWrapper, BackingField> ","description":"nz.adjmunro.kty.functions.operators.times.Multipliable","location":"kty/nz.adjmunro.kty.functions.operators.times/-multipliable/index.html","searchKeys":["Multipliable","interface Multipliable<ActualWrapper : Multipliable<ActualWrapper, BackingField>, BackingField> : Mergeable<ActualWrapper, BackingField> ","nz.adjmunro.kty.functions.operators.times.Multipliable"]},{"name":"interface MutableStringy<W : MutableStringy<W>> : Stringy<W> , Transformable<W, String> , Addable<W, String> , AnyAddable<W, String> ","description":"nz.adjmunro.kty.MutableStringy","location":"kty/nz.adjmunro.kty/-mutable-stringy/index.html","searchKeys":["MutableStringy","interface MutableStringy<W : MutableStringy<W>> : Stringy<W> , Transformable<W, String> , Addable<W, String> , AnyAddable<W, String> ","nz.adjmunro.kty.MutableStringy"]},{"name":"interface Negatable<ActualWrapper : Negatable<ActualWrapper, BackingField>, BackingField> : Mergeable<ActualWrapper, BackingField> ","description":"nz.adjmunro.kty.functions.operators.minus.Negatable","location":"kty/nz.adjmunro.kty.functions.operators.minus/-negatable/index.html","searchKeys":["Negatable","interface Negatable<ActualWrapper : Negatable<ActualWrapper, BackingField>, BackingField> : Mergeable<ActualWrapper, BackingField> ","nz.adjmunro.kty.functions.operators.minus.Negatable"]},{"name":"interface NumberAddable<ActualWrapper : NumberAddable<ActualWrapper, BackingField>, BackingField> : NumberMergeable<ActualWrapper, BackingField> ","description":"nz.adjmunro.kty.functions.operators.plus.NumberAddable","location":"kty/nz.adjmunro.kty.functions.operators.plus/-number-addable/index.html","searchKeys":["NumberAddable","interface NumberAddable<ActualWrapper : NumberAddable<ActualWrapper, BackingField>, BackingField> : NumberMergeable<ActualWrapper, BackingField> ","nz.adjmunro.kty.functions.operators.plus.NumberAddable"]},{"name":"interface NumberCastable : Floatable, Wholable","description":"nz.adjmunro.kty.functions.operators.cast.NumberCastable","location":"kty/nz.adjmunro.kty.functions.operators.cast/-number-castable/index.html","searchKeys":["NumberCastable","interface NumberCastable : Floatable, Wholable","nz.adjmunro.kty.functions.operators.cast.NumberCastable"]},{"name":"interface NumberComparable<ActualWrapper : NumberComparable<ActualWrapper, BackingField>, BackingField> : NumberMergeable<ActualWrapper, BackingField> ","description":"nz.adjmunro.kty.functions.operators.comparable.NumberComparable","location":"kty/nz.adjmunro.kty.functions.operators.comparable/-number-comparable/index.html","searchKeys":["NumberComparable","interface NumberComparable<ActualWrapper : NumberComparable<ActualWrapper, BackingField>, BackingField> : NumberMergeable<ActualWrapper, BackingField> ","nz.adjmunro.kty.functions.operators.comparable.NumberComparable"]},{"name":"interface NumberDivisible<ActualWrapper : NumberDivisible<ActualWrapper, BackingField>, BackingField> : NumberMergeable<ActualWrapper, BackingField> ","description":"nz.adjmunro.kty.functions.operators.div.NumberDivisible","location":"kty/nz.adjmunro.kty.functions.operators.div/-number-divisible/index.html","searchKeys":["NumberDivisible","interface NumberDivisible<ActualWrapper : NumberDivisible<ActualWrapper, BackingField>, BackingField> : NumberMergeable<ActualWrapper, BackingField> ","nz.adjmunro.kty.functions.operators.div.NumberDivisible"]},{"name":"interface NumberMathable<ActualWrapper : NumberMathable<ActualWrapper, BackingField>, BackingField> : NumberAddable<ActualWrapper, BackingField> , NumberSubtractable<ActualWrapper, BackingField> , NumberMultipliable<ActualWrapper, BackingField> , NumberDivisible<ActualWrapper, BackingField> , NumberRemainderable<ActualWrapper, BackingField> ","description":"nz.adjmunro.kty.functions.operators.NumberMathable","location":"kty/nz.adjmunro.kty.functions.operators/-number-mathable/index.html","searchKeys":["NumberMathable","interface NumberMathable<ActualWrapper : NumberMathable<ActualWrapper, BackingField>, BackingField> : NumberAddable<ActualWrapper, BackingField> , NumberSubtractable<ActualWrapper, BackingField> , NumberMultipliable<ActualWrapper, BackingField> , NumberDivisible<ActualWrapper, BackingField> , NumberRemainderable<ActualWrapper, BackingField> ","nz.adjmunro.kty.functions.operators.NumberMathable"]},{"name":"interface NumberMergeable<ActualWrapper : NumberMergeable<ActualWrapper, BackingField>, BackingField> : Boxed<ActualWrapper, BackingField> ","description":"nz.adjmunro.kty.functions.merge.NumberMergeable","location":"kty/nz.adjmunro.kty.functions.merge/-number-mergeable/index.html","searchKeys":["NumberMergeable","interface NumberMergeable<ActualWrapper : NumberMergeable<ActualWrapper, BackingField>, BackingField> : Boxed<ActualWrapper, BackingField> ","nz.adjmunro.kty.functions.merge.NumberMergeable"]},{"name":"interface NumberMultipliable<ActualWrapper : NumberMultipliable<ActualWrapper, BackingField>, BackingField> : NumberMergeable<ActualWrapper, BackingField> ","description":"nz.adjmunro.kty.functions.operators.times.NumberMultipliable","location":"kty/nz.adjmunro.kty.functions.operators.times/-number-multipliable/index.html","searchKeys":["NumberMultipliable","interface NumberMultipliable<ActualWrapper : NumberMultipliable<ActualWrapper, BackingField>, BackingField> : NumberMergeable<ActualWrapper, BackingField> ","nz.adjmunro.kty.functions.operators.times.NumberMultipliable"]},{"name":"interface NumberRemainderable<ActualWrapper : NumberRemainderable<ActualWrapper, BackingField>, BackingField> : NumberMergeable<ActualWrapper, BackingField> ","description":"nz.adjmunro.kty.functions.operators.rem.NumberRemainderable","location":"kty/nz.adjmunro.kty.functions.operators.rem/-number-remainderable/index.html","searchKeys":["NumberRemainderable","interface NumberRemainderable<ActualWrapper : NumberRemainderable<ActualWrapper, BackingField>, BackingField> : NumberMergeable<ActualWrapper, BackingField> ","nz.adjmunro.kty.functions.operators.rem.NumberRemainderable"]},{"name":"interface NumberSubtractable<ActualWrapper : NumberSubtractable<ActualWrapper, BackingField>, BackingField> : NumberMergeable<ActualWrapper, BackingField> ","description":"nz.adjmunro.kty.functions.operators.minus.NumberSubtractable","location":"kty/nz.adjmunro.kty.functions.operators.minus/-number-subtractable/index.html","searchKeys":["NumberSubtractable","interface NumberSubtractable<ActualWrapper : NumberSubtractable<ActualWrapper, BackingField>, BackingField> : NumberMergeable<ActualWrapper, BackingField> ","nz.adjmunro.kty.functions.operators.minus.NumberSubtractable"]},{"name":"interface Numbery2D<ActualWrapper : Numbery2D<ActualWrapper, BackingField>, BackingField : Numbery<BackingField, *>> : Mathable<ActualWrapper, Tuple2<BackingField>> , NumberMathable<ActualWrapper, Tuple2<BackingField>> , Tuple.Tuple2d<BackingField, BackingField> ","description":"nz.adjmunro.kty.tuple.numbery.Numbery2D","location":"kty/nz.adjmunro.kty.tuple.numbery/-numbery2-d/index.html","searchKeys":["Numbery2D","interface Numbery2D<ActualWrapper : Numbery2D<ActualWrapper, BackingField>, BackingField : Numbery<BackingField, *>> : Mathable<ActualWrapper, Tuple2<BackingField>> , NumberMathable<ActualWrapper, Tuple2<BackingField>> , Tuple.Tuple2d<BackingField, BackingField> ","nz.adjmunro.kty.tuple.numbery.Numbery2D"]},{"name":"interface Numbery3D<ActualWrapper : Numbery3D<ActualWrapper, BackingField>, BackingField : Numbery<BackingField, *>> : Mathable<ActualWrapper, Tuple3<BackingField>> , NumberMathable<ActualWrapper, Tuple3<BackingField>> , Tuple.Tuple3d<BackingField, BackingField, BackingField> ","description":"nz.adjmunro.kty.tuple.numbery.Numbery3D","location":"kty/nz.adjmunro.kty.tuple.numbery/-numbery3-d/index.html","searchKeys":["Numbery3D","interface Numbery3D<ActualWrapper : Numbery3D<ActualWrapper, BackingField>, BackingField : Numbery<BackingField, *>> : Mathable<ActualWrapper, Tuple3<BackingField>> , NumberMathable<ActualWrapper, Tuple3<BackingField>> , Tuple.Tuple3d<BackingField, BackingField, BackingField> ","nz.adjmunro.kty.tuple.numbery.Numbery3D"]},{"name":"interface Numbery4D<ActualWrapper : Numbery4D<ActualWrapper, BackingField>, BackingField : Numbery<BackingField, *>> : Mathable<ActualWrapper, Tuple4<BackingField>> , NumberMathable<ActualWrapper, Tuple4<BackingField>> , Tuple.Tuple4d<BackingField, BackingField, BackingField, BackingField> ","description":"nz.adjmunro.kty.tuple.numbery.Numbery4D","location":"kty/nz.adjmunro.kty.tuple.numbery/-numbery4-d/index.html","searchKeys":["Numbery4D","interface Numbery4D<ActualWrapper : Numbery4D<ActualWrapper, BackingField>, BackingField : Numbery<BackingField, *>> : Mathable<ActualWrapper, Tuple4<BackingField>> , NumberMathable<ActualWrapper, Tuple4<BackingField>> , Tuple.Tuple4d<BackingField, BackingField, BackingField, BackingField> ","nz.adjmunro.kty.tuple.numbery.Numbery4D"]},{"name":"interface Numbery5D<ActualWrapper : Numbery5D<ActualWrapper, BackingField>, BackingField : Numbery<BackingField, *>> : Mathable<ActualWrapper, Tuple5<BackingField>> , NumberMathable<ActualWrapper, Tuple5<BackingField>> , Tuple.Tuple5d<BackingField, BackingField, BackingField, BackingField, BackingField> ","description":"nz.adjmunro.kty.tuple.numbery.Numbery5D","location":"kty/nz.adjmunro.kty.tuple.numbery/-numbery5-d/index.html","searchKeys":["Numbery5D","interface Numbery5D<ActualWrapper : Numbery5D<ActualWrapper, BackingField>, BackingField : Numbery<BackingField, *>> : Mathable<ActualWrapper, Tuple5<BackingField>> , NumberMathable<ActualWrapper, Tuple5<BackingField>> , Tuple.Tuple5d<BackingField, BackingField, BackingField, BackingField, BackingField> ","nz.adjmunro.kty.tuple.numbery.Numbery5D"]},{"name":"interface Numbery<ActualWrapper : Numbery<ActualWrapper, BackingField>, BackingField : Number> : Mathable<ActualWrapper, BackingField> , UnaryMathable<ActualWrapper, BackingField> , BoxedComparable<ActualWrapper, BackingField> , NumberMathable<ActualWrapper, BackingField> , NumberComparable<ActualWrapper, BackingField> , Specifiable<Number, BackingField> , NumberCastable","description":"nz.adjmunro.kty.Numbery","location":"kty/nz.adjmunro.kty/-numbery/index.html","searchKeys":["Numbery","interface Numbery<ActualWrapper : Numbery<ActualWrapper, BackingField>, BackingField : Number> : Mathable<ActualWrapper, BackingField> , UnaryMathable<ActualWrapper, BackingField> , BoxedComparable<ActualWrapper, BackingField> , NumberMathable<ActualWrapper, BackingField> , NumberComparable<ActualWrapper, BackingField> , Specifiable<Number, BackingField> , NumberCastable","nz.adjmunro.kty.Numbery"]},{"name":"interface Reconstructable<ActualWrapper : Reconstructable<ActualWrapper, BackingField>, BackingField>","description":"nz.adjmunro.kty.functions.Reconstructable","location":"kty/nz.adjmunro.kty.functions/-reconstructable/index.html","searchKeys":["Reconstructable","interface Reconstructable<ActualWrapper : Reconstructable<ActualWrapper, BackingField>, BackingField>","nz.adjmunro.kty.functions.Reconstructable"]},{"name":"interface Remainderable<ActualWrapper : Remainderable<ActualWrapper, BackingField>, BackingField> : Mergeable<ActualWrapper, BackingField> ","description":"nz.adjmunro.kty.functions.operators.rem.Remainderable","location":"kty/nz.adjmunro.kty.functions.operators.rem/-remainderable/index.html","searchKeys":["Remainderable","interface Remainderable<ActualWrapper : Remainderable<ActualWrapper, BackingField>, BackingField> : Mergeable<ActualWrapper, BackingField> ","nz.adjmunro.kty.functions.operators.rem.Remainderable"]},{"name":"interface RoundCastable","description":"nz.adjmunro.kty.functions.operators.cast.RoundCastable","location":"kty/nz.adjmunro.kty.functions.operators.cast/-round-castable/index.html","searchKeys":["RoundCastable","interface RoundCastable","nz.adjmunro.kty.functions.operators.cast.RoundCastable"]},{"name":"interface Specifiable<Parent, Child : Parent>","description":"nz.adjmunro.kty.functions.operators.cast.Specifiable","location":"kty/nz.adjmunro.kty.functions.operators.cast/-specifiable/index.html","searchKeys":["Specifiable","interface Specifiable<Parent, Child : Parent>","nz.adjmunro.kty.functions.operators.cast.Specifiable"]},{"name":"interface StringComparable<ActualWrapper : StringComparable<ActualWrapper, BackingField>, BackingField> : AnyMergeable<ActualWrapper, BackingField> ","description":"nz.adjmunro.kty.functions.operators.comparable.StringComparable","location":"kty/nz.adjmunro.kty.functions.operators.comparable/-string-comparable/index.html","searchKeys":["StringComparable","interface StringComparable<ActualWrapper : StringComparable<ActualWrapper, BackingField>, BackingField> : AnyMergeable<ActualWrapper, BackingField> ","nz.adjmunro.kty.functions.operators.comparable.StringComparable"]},{"name":"interface Stringy<W : Stringy<W>> : BoxedComparable<W, String> , CharSequence","description":"nz.adjmunro.kty.Stringy","location":"kty/nz.adjmunro.kty/-stringy/index.html","searchKeys":["Stringy","interface Stringy<W : Stringy<W>> : BoxedComparable<W, String> , CharSequence","nz.adjmunro.kty.Stringy"]},{"name":"interface Subtractable<ActualWrapper : Subtractable<ActualWrapper, BackingField>, BackingField> : Mergeable<ActualWrapper, BackingField> ","description":"nz.adjmunro.kty.functions.operators.minus.Subtractable","location":"kty/nz.adjmunro.kty.functions.operators.minus/-subtractable/index.html","searchKeys":["Subtractable","interface Subtractable<ActualWrapper : Subtractable<ActualWrapper, BackingField>, BackingField> : Mergeable<ActualWrapper, BackingField> ","nz.adjmunro.kty.functions.operators.minus.Subtractable"]},{"name":"interface Transformable<ActualWrapper : Transformable<ActualWrapper, BackingField>, BackingField> : Boxed<ActualWrapper, BackingField> ","description":"nz.adjmunro.kty.functions.Transformable","location":"kty/nz.adjmunro.kty.functions/-transformable/index.html","searchKeys":["Transformable","interface Transformable<ActualWrapper : Transformable<ActualWrapper, BackingField>, BackingField> : Boxed<ActualWrapper, BackingField> ","nz.adjmunro.kty.functions.Transformable"]},{"name":"interface Tuple","description":"nz.adjmunro.kty.tuple.Tuple","location":"kty/nz.adjmunro.kty.tuple/-tuple/index.html","searchKeys":["Tuple","interface Tuple","nz.adjmunro.kty.tuple.Tuple"]},{"name":"interface Tuple2d<out A, out B> : Tuple","description":"nz.adjmunro.kty.tuple.Tuple.Tuple2d","location":"kty/nz.adjmunro.kty.tuple/-tuple/-tuple2d/index.html","searchKeys":["Tuple2d","interface Tuple2d<out A, out B> : Tuple","nz.adjmunro.kty.tuple.Tuple.Tuple2d"]},{"name":"interface Tuple3d<out A, out B, out C> : Tuple.Tuple2d<A, B> ","description":"nz.adjmunro.kty.tuple.Tuple.Tuple3d","location":"kty/nz.adjmunro.kty.tuple/-tuple/-tuple3d/index.html","searchKeys":["Tuple3d","interface Tuple3d<out A, out B, out C> : Tuple.Tuple2d<A, B> ","nz.adjmunro.kty.tuple.Tuple.Tuple3d"]},{"name":"interface Tuple4d<out A, out B, out C, out D> : Tuple.Tuple3d<A, B, C> ","description":"nz.adjmunro.kty.tuple.Tuple.Tuple4d","location":"kty/nz.adjmunro.kty.tuple/-tuple/-tuple4d/index.html","searchKeys":["Tuple4d","interface Tuple4d<out A, out B, out C, out D> : Tuple.Tuple3d<A, B, C> ","nz.adjmunro.kty.tuple.Tuple.Tuple4d"]},{"name":"interface Tuple5d<out A, out B, out C, out D, out E> : Tuple.Tuple4d<A, B, C, D> ","description":"nz.adjmunro.kty.tuple.Tuple.Tuple5d","location":"kty/nz.adjmunro.kty.tuple/-tuple/-tuple5d/index.html","searchKeys":["Tuple5d","interface Tuple5d<out A, out B, out C, out D, out E> : Tuple.Tuple4d<A, B, C, D> ","nz.adjmunro.kty.tuple.Tuple.Tuple5d"]},{"name":"interface Tuple6d<out A, out B, out C, out D, out E, out F> : Tuple.Tuple5d<A, B, C, D, E> ","description":"nz.adjmunro.kty.tuple.Tuple.Tuple6d","location":"kty/nz.adjmunro.kty.tuple/-tuple/-tuple6d/index.html","searchKeys":["Tuple6d","interface Tuple6d<out A, out B, out C, out D, out E, out F> : Tuple.Tuple5d<A, B, C, D, E> ","nz.adjmunro.kty.tuple.Tuple.Tuple6d"]},{"name":"interface Tuple7d<out A, out B, out C, out D, out E, out F, out G> : Tuple.Tuple6d<A, B, C, D, E, F> ","description":"nz.adjmunro.kty.tuple.Tuple.Tuple7d","location":"kty/nz.adjmunro.kty.tuple/-tuple/-tuple7d/index.html","searchKeys":["Tuple7d","interface Tuple7d<out A, out B, out C, out D, out E, out F, out G> : Tuple.Tuple6d<A, B, C, D, E, F> ","nz.adjmunro.kty.tuple.Tuple.Tuple7d"]},{"name":"interface Tuple8d<out A, out B, out C, out D, out E, out F, out G, out H> : Tuple.Tuple7d<A, B, C, D, E, F, G> ","description":"nz.adjmunro.kty.tuple.Tuple.Tuple8d","location":"kty/nz.adjmunro.kty.tuple/-tuple/-tuple8d/index.html","searchKeys":["Tuple8d","interface Tuple8d<out A, out B, out C, out D, out E, out F, out G, out H> : Tuple.Tuple7d<A, B, C, D, E, F, G> ","nz.adjmunro.kty.tuple.Tuple.Tuple8d"]},{"name":"interface Tuple9d<out A, out B, out C, out D, out E, out F, out G, out H, out I> : Tuple.Tuple8d<A, B, C, D, E, F, G, H> ","description":"nz.adjmunro.kty.tuple.Tuple.Tuple9d","location":"kty/nz.adjmunro.kty.tuple/-tuple/-tuple9d/index.html","searchKeys":["Tuple9d","interface Tuple9d<out A, out B, out C, out D, out E, out F, out G, out H, out I> : Tuple.Tuple8d<A, B, C, D, E, F, G, H> ","nz.adjmunro.kty.tuple.Tuple.Tuple9d"]},{"name":"interface UnaryMathable<ActualWrapper : UnaryMathable<ActualWrapper, BackingField>, BackingField> : Absolutable<ActualWrapper, BackingField> , Negatable<ActualWrapper, BackingField> , Incrementable<ActualWrapper, BackingField> , Decrementable<ActualWrapper, BackingField> ","description":"nz.adjmunro.kty.functions.operators.UnaryMathable","location":"kty/nz.adjmunro.kty.functions.operators/-unary-mathable/index.html","searchKeys":["UnaryMathable","interface UnaryMathable<ActualWrapper : UnaryMathable<ActualWrapper, BackingField>, BackingField> : Absolutable<ActualWrapper, BackingField> , Negatable<ActualWrapper, BackingField> , Incrementable<ActualWrapper, BackingField> , Decrementable<ActualWrapper, BackingField> ","nz.adjmunro.kty.functions.operators.UnaryMathable"]},{"name":"interface Wholable","description":"nz.adjmunro.kty.functions.operators.cast.Wholable","location":"kty/nz.adjmunro.kty.functions.operators.cast/-wholable/index.html","searchKeys":["Wholable","interface Wholable","nz.adjmunro.kty.functions.operators.cast.Wholable"]},{"name":"object Companion","description":"nz.adjmunro.kty.Angle.Companion","location":"kty/nz.adjmunro.kty/-angle/-companion/index.html","searchKeys":["Companion","object Companion","nz.adjmunro.kty.Angle.Companion"]},{"name":"open fun merge(other: ActualWrapper, transform: Merge<BackingField>): ActualWrapper","description":"nz.adjmunro.kty.functions.Mergeable.merge","location":"kty/nz.adjmunro.kty.functions/-mergeable/merge.html","searchKeys":["merge","open fun merge(other: ActualWrapper, transform: Merge<BackingField>): ActualWrapper","nz.adjmunro.kty.functions.Mergeable.merge"]},{"name":"open fun merge(other: Any?, transform: MergeABtoA<BackingField, Any?>): ActualWrapper","description":"nz.adjmunro.kty.functions.merge.AnyMergeable.merge","location":"kty/nz.adjmunro.kty.functions.merge/-any-mergeable/merge.html","searchKeys":["merge","open fun merge(other: Any?, transform: MergeABtoA<BackingField, Any?>): ActualWrapper","nz.adjmunro.kty.functions.merge.AnyMergeable.merge"]},{"name":"open fun merge(other: Number, transform: MergeABtoA<BackingField, Number>): ActualWrapper","description":"nz.adjmunro.kty.functions.merge.NumberMergeable.merge","location":"kty/nz.adjmunro.kty.functions.merge/-number-mergeable/merge.html","searchKeys":["merge","open fun merge(other: Number, transform: MergeABtoA<BackingField, Number>): ActualWrapper","nz.adjmunro.kty.functions.merge.NumberMergeable.merge"]},{"name":"open infix fun map(transform: Transform<BackingField>): ActualWrapper","description":"nz.adjmunro.kty.functions.Transformable.map","location":"kty/nz.adjmunro.kty.functions/-transformable/map.html","searchKeys":["map","open infix fun map(transform: Transform<BackingField>): ActualWrapper","nz.adjmunro.kty.functions.Transformable.map"]},{"name":"open operator fun compareTo(num: Number): Int","description":"nz.adjmunro.kty.functions.operators.comparable.NumberComparable.compareTo","location":"kty/nz.adjmunro.kty.functions.operators.comparable/-number-comparable/compare-to.html","searchKeys":["compareTo","open operator fun compareTo(num: Number): Int","nz.adjmunro.kty.functions.operators.comparable.NumberComparable.compareTo"]},{"name":"open operator fun compareTo(other: BackingField): Int","description":"nz.adjmunro.kty.functions.operators.comparable.BoxedComparable.compareTo","location":"kty/nz.adjmunro.kty.functions.operators.comparable/-boxed-comparable/compare-to.html","searchKeys":["compareTo","open operator fun compareTo(other: BackingField): Int","nz.adjmunro.kty.functions.operators.comparable.BoxedComparable.compareTo"]},{"name":"open operator fun compareTo(str: String): Int","description":"nz.adjmunro.kty.functions.operators.comparable.StringComparable.compareTo","location":"kty/nz.adjmunro.kty.functions.operators.comparable/-string-comparable/compare-to.html","searchKeys":["compareTo","open operator fun compareTo(str: String): Int","nz.adjmunro.kty.functions.operators.comparable.StringComparable.compareTo"]},{"name":"open operator fun dec(): ActualWrapper","description":"nz.adjmunro.kty.functions.operators.minus.Decrementable.dec","location":"kty/nz.adjmunro.kty.functions.operators.minus/-decrementable/dec.html","searchKeys":["dec","open operator fun dec(): ActualWrapper","nz.adjmunro.kty.functions.operators.minus.Decrementable.dec"]},{"name":"open operator fun div(num: Number): ActualWrapper","description":"nz.adjmunro.kty.functions.operators.div.NumberDivisible.div","location":"kty/nz.adjmunro.kty.functions.operators.div/-number-divisible/div.html","searchKeys":["div","open operator fun div(num: Number): ActualWrapper","nz.adjmunro.kty.functions.operators.div.NumberDivisible.div"]},{"name":"open operator fun div(other: ActualWrapper): ActualWrapper","description":"nz.adjmunro.kty.functions.operators.div.Divisible.div","location":"kty/nz.adjmunro.kty.functions.operators.div/-divisible/div.html","searchKeys":["div","open operator fun div(other: ActualWrapper): ActualWrapper","nz.adjmunro.kty.functions.operators.div.Divisible.div"]},{"name":"open operator fun inc(): ActualWrapper","description":"nz.adjmunro.kty.functions.operators.plus.Incrementable.inc","location":"kty/nz.adjmunro.kty.functions.operators.plus/-incrementable/inc.html","searchKeys":["inc","open operator fun inc(): ActualWrapper","nz.adjmunro.kty.functions.operators.plus.Incrementable.inc"]},{"name":"open operator fun minus(num: Number): ActualWrapper","description":"nz.adjmunro.kty.functions.operators.minus.NumberSubtractable.minus","location":"kty/nz.adjmunro.kty.functions.operators.minus/-number-subtractable/minus.html","searchKeys":["minus","open operator fun minus(num: Number): ActualWrapper","nz.adjmunro.kty.functions.operators.minus.NumberSubtractable.minus"]},{"name":"open operator fun minus(other: ActualWrapper): ActualWrapper","description":"nz.adjmunro.kty.functions.operators.minus.Subtractable.minus","location":"kty/nz.adjmunro.kty.functions.operators.minus/-subtractable/minus.html","searchKeys":["minus","open operator fun minus(other: ActualWrapper): ActualWrapper","nz.adjmunro.kty.functions.operators.minus.Subtractable.minus"]},{"name":"open operator fun plus(num: Number): ActualWrapper","description":"nz.adjmunro.kty.functions.operators.plus.NumberAddable.plus","location":"kty/nz.adjmunro.kty.functions.operators.plus/-number-addable/plus.html","searchKeys":["plus","open operator fun plus(num: Number): ActualWrapper","nz.adjmunro.kty.functions.operators.plus.NumberAddable.plus"]},{"name":"open operator fun plus(other: ActualWrapper): ActualWrapper","description":"nz.adjmunro.kty.functions.operators.plus.Addable.plus","location":"kty/nz.adjmunro.kty.functions.operators.plus/-addable/plus.html","searchKeys":["plus","open operator fun plus(other: ActualWrapper): ActualWrapper","nz.adjmunro.kty.functions.operators.plus.Addable.plus"]},{"name":"open operator fun plus(other: Any?): ActualWrapper","description":"nz.adjmunro.kty.functions.operators.plus.AnyAddable.plus","location":"kty/nz.adjmunro.kty.functions.operators.plus/-any-addable/plus.html","searchKeys":["plus","open operator fun plus(other: Any?): ActualWrapper","nz.adjmunro.kty.functions.operators.plus.AnyAddable.plus"]},{"name":"open operator fun rem(num: Number): ActualWrapper","description":"nz.adjmunro.kty.functions.operators.rem.NumberRemainderable.rem","location":"kty/nz.adjmunro.kty.functions.operators.rem/-number-remainderable/rem.html","searchKeys":["rem","open operator fun rem(num: Number): ActualWrapper","nz.adjmunro.kty.functions.operators.rem.NumberRemainderable.rem"]},{"name":"open operator fun rem(other: ActualWrapper): ActualWrapper","description":"nz.adjmunro.kty.functions.operators.rem.Remainderable.rem","location":"kty/nz.adjmunro.kty.functions.operators.rem/-remainderable/rem.html","searchKeys":["rem","open operator fun rem(other: ActualWrapper): ActualWrapper","nz.adjmunro.kty.functions.operators.rem.Remainderable.rem"]},{"name":"open operator fun times(num: Number): ActualWrapper","description":"nz.adjmunro.kty.functions.operators.times.NumberMultipliable.times","location":"kty/nz.adjmunro.kty.functions.operators.times/-number-multipliable/times.html","searchKeys":["times","open operator fun times(num: Number): ActualWrapper","nz.adjmunro.kty.functions.operators.times.NumberMultipliable.times"]},{"name":"open operator fun times(other: ActualWrapper): ActualWrapper","description":"nz.adjmunro.kty.functions.operators.times.Multipliable.times","location":"kty/nz.adjmunro.kty.functions.operators.times/-multipliable/times.html","searchKeys":["times","open operator fun times(other: ActualWrapper): ActualWrapper","nz.adjmunro.kty.functions.operators.times.Multipliable.times"]},{"name":"open operator fun unaryMinus(): ActualWrapper","description":"nz.adjmunro.kty.functions.operators.minus.Negatable.unaryMinus","location":"kty/nz.adjmunro.kty.functions.operators.minus/-negatable/unary-minus.html","searchKeys":["unaryMinus","open operator fun unaryMinus(): ActualWrapper","nz.adjmunro.kty.functions.operators.minus.Negatable.unaryMinus"]},{"name":"open operator fun unaryPlus(): ActualWrapper","description":"nz.adjmunro.kty.functions.operators.plus.Absolutable.unaryPlus","location":"kty/nz.adjmunro.kty.functions.operators.plus/-absolutable/unary-plus.html","searchKeys":["unaryPlus","open operator fun unaryPlus(): ActualWrapper","nz.adjmunro.kty.functions.operators.plus.Absolutable.unaryPlus"]},{"name":"open operator override fun compareTo(other: ActualWrapper): Int","description":"nz.adjmunro.kty.functions.operators.comparable.BoxedComparable.compareTo","location":"kty/nz.adjmunro.kty.functions.operators.comparable/-boxed-comparable/compare-to.html","searchKeys":["compareTo","open operator override fun compareTo(other: ActualWrapper): Int","nz.adjmunro.kty.functions.operators.comparable.BoxedComparable.compareTo"]},{"name":"open operator override fun get(index: Int): Char","description":"nz.adjmunro.kty.Stringy.get","location":"kty/nz.adjmunro.kty/-stringy/get.html","searchKeys":["get","open operator override fun get(index: Int): Char","nz.adjmunro.kty.Stringy.get"]},{"name":"open override fun subSequence(startIndex: Int, endIndex: Int): CharSequence","description":"nz.adjmunro.kty.Stringy.subSequence","location":"kty/nz.adjmunro.kty/-stringy/sub-sequence.html","searchKeys":["subSequence","open override fun subSequence(startIndex: Int, endIndex: Int): CharSequence","nz.adjmunro.kty.Stringy.subSequence"]},{"name":"open override fun toString(): String","description":"nz.adjmunro.kty.tuple.Duple.toString","location":"kty/nz.adjmunro.kty.tuple/-duple/to-string.html","searchKeys":["toString","open override fun toString(): String","nz.adjmunro.kty.tuple.Duple.toString"]},{"name":"open override fun toString(): String","description":"nz.adjmunro.kty.tuple.Nonuple.toString","location":"kty/nz.adjmunro.kty.tuple/-nonuple/to-string.html","searchKeys":["toString","open override fun toString(): String","nz.adjmunro.kty.tuple.Nonuple.toString"]},{"name":"open override fun toString(): String","description":"nz.adjmunro.kty.tuple.Octuple.toString","location":"kty/nz.adjmunro.kty.tuple/-octuple/to-string.html","searchKeys":["toString","open override fun toString(): String","nz.adjmunro.kty.tuple.Octuple.toString"]},{"name":"open override fun toString(): String","description":"nz.adjmunro.kty.tuple.Quadruple.toString","location":"kty/nz.adjmunro.kty.tuple/-quadruple/to-string.html","searchKeys":["toString","open override fun toString(): String","nz.adjmunro.kty.tuple.Quadruple.toString"]},{"name":"open override fun toString(): String","description":"nz.adjmunro.kty.tuple.Quintuple.toString","location":"kty/nz.adjmunro.kty.tuple/-quintuple/to-string.html","searchKeys":["toString","open override fun toString(): String","nz.adjmunro.kty.tuple.Quintuple.toString"]},{"name":"open override fun toString(): String","description":"nz.adjmunro.kty.tuple.Septuple.toString","location":"kty/nz.adjmunro.kty.tuple/-septuple/to-string.html","searchKeys":["toString","open override fun toString(): String","nz.adjmunro.kty.tuple.Septuple.toString"]},{"name":"open override fun toString(): String","description":"nz.adjmunro.kty.tuple.Sextuple.toString","location":"kty/nz.adjmunro.kty.tuple/-sextuple/to-string.html","searchKeys":["toString","open override fun toString(): String","nz.adjmunro.kty.tuple.Sextuple.toString"]},{"name":"open override fun toString(): String","description":"nz.adjmunro.kty.tuple.Truple.toString","location":"kty/nz.adjmunro.kty.tuple/-truple/to-string.html","searchKeys":["toString","open override fun toString(): String","nz.adjmunro.kty.tuple.Truple.toString"]},{"name":"open override val absolute: Transform<Double>","description":"nz.adjmunro.kty.Doubly.absolute","location":"kty/nz.adjmunro.kty/-doubly/absolute.html","searchKeys":["absolute","open override val absolute: Transform<Double>","nz.adjmunro.kty.Doubly.absolute"]},{"name":"open override val absolute: Transform<Float>","description":"nz.adjmunro.kty.Floaty.absolute","location":"kty/nz.adjmunro.kty/-floaty/absolute.html","searchKeys":["absolute","open override val absolute: Transform<Float>","nz.adjmunro.kty.Floaty.absolute"]},{"name":"open override val absolute: Transform<Int>","description":"nz.adjmunro.kty.Inty.absolute","location":"kty/nz.adjmunro.kty/-inty/absolute.html","searchKeys":["absolute","open override val absolute: Transform<Int>","nz.adjmunro.kty.Inty.absolute"]},{"name":"open override val absolute: Transform<Long>","description":"nz.adjmunro.kty.Longy.absolute","location":"kty/nz.adjmunro.kty/-longy/absolute.html","searchKeys":["absolute","open override val absolute: Transform<Long>","nz.adjmunro.kty.Longy.absolute"]},{"name":"open override val addByAny: MergeABtoA<String, Any?>","description":"nz.adjmunro.kty.MutableStringy.addByAny","location":"kty/nz.adjmunro.kty/-mutable-stringy/add-by-any.html","searchKeys":["addByAny","open override val addByAny: MergeABtoA<String, Any?>","nz.adjmunro.kty.MutableStringy.addByAny"]},{"name":"open override val addByNumber: MergeABtoA<BackingField, Number>","description":"nz.adjmunro.kty.Numbery.addByNumber","location":"kty/nz.adjmunro.kty/-numbery/add-by-number.html","searchKeys":["addByNumber","open override val addByNumber: MergeABtoA<BackingField, Number>","nz.adjmunro.kty.Numbery.addByNumber"]},{"name":"open override val addByNumber: MergeABtoA<Tuple2<BackingField>, Number>","description":"nz.adjmunro.kty.tuple.numbery.Numbery2D.addByNumber","location":"kty/nz.adjmunro.kty.tuple.numbery/-numbery2-d/add-by-number.html","searchKeys":["addByNumber","open override val addByNumber: MergeABtoA<Tuple2<BackingField>, Number>","nz.adjmunro.kty.tuple.numbery.Numbery2D.addByNumber"]},{"name":"open override val addByNumber: MergeABtoA<Tuple3<BackingField>, Number>","description":"nz.adjmunro.kty.tuple.numbery.Numbery3D.addByNumber","location":"kty/nz.adjmunro.kty.tuple.numbery/-numbery3-d/add-by-number.html","searchKeys":["addByNumber","open override val addByNumber: MergeABtoA<Tuple3<BackingField>, Number>","nz.adjmunro.kty.tuple.numbery.Numbery3D.addByNumber"]},{"name":"open override val addByNumber: MergeABtoA<Tuple4<BackingField>, Number>","description":"nz.adjmunro.kty.tuple.numbery.Numbery4D.addByNumber","location":"kty/nz.adjmunro.kty.tuple.numbery/-numbery4-d/add-by-number.html","searchKeys":["addByNumber","open override val addByNumber: MergeABtoA<Tuple4<BackingField>, Number>","nz.adjmunro.kty.tuple.numbery.Numbery4D.addByNumber"]},{"name":"open override val addByNumber: MergeABtoA<Tuple5<BackingField>, Number>","description":"nz.adjmunro.kty.tuple.numbery.Numbery5D.addByNumber","location":"kty/nz.adjmunro.kty.tuple.numbery/-numbery5-d/add-by-number.html","searchKeys":["addByNumber","open override val addByNumber: MergeABtoA<Tuple5<BackingField>, Number>","nz.adjmunro.kty.tuple.numbery.Numbery5D.addByNumber"]},{"name":"open override val asBigDecimal: BigDecimal","description":"nz.adjmunro.kty.Numbery.asBigDecimal","location":"kty/nz.adjmunro.kty/-numbery/as-big-decimal.html","searchKeys":["asBigDecimal","open override val asBigDecimal: BigDecimal","nz.adjmunro.kty.Numbery.asBigDecimal"]},{"name":"open override val asBigInteger: BigInteger","description":"nz.adjmunro.kty.Numbery.asBigInteger","location":"kty/nz.adjmunro.kty/-numbery/as-big-integer.html","searchKeys":["asBigInteger","open override val asBigInteger: BigInteger","nz.adjmunro.kty.Numbery.asBigInteger"]},{"name":"open override val asDouble: Double","description":"nz.adjmunro.kty.Numbery.asDouble","location":"kty/nz.adjmunro.kty/-numbery/as-double.html","searchKeys":["asDouble","open override val asDouble: Double","nz.adjmunro.kty.Numbery.asDouble"]},{"name":"open override val asFloat: Float","description":"nz.adjmunro.kty.Numbery.asFloat","location":"kty/nz.adjmunro.kty/-numbery/as-float.html","searchKeys":["asFloat","open override val asFloat: Float","nz.adjmunro.kty.Numbery.asFloat"]},{"name":"open override val asInt: Int","description":"nz.adjmunro.kty.Numbery.asInt","location":"kty/nz.adjmunro.kty/-numbery/as-int.html","searchKeys":["asInt","open override val asInt: Int","nz.adjmunro.kty.Numbery.asInt"]},{"name":"open override val asLong: Long","description":"nz.adjmunro.kty.Numbery.asLong","location":"kty/nz.adjmunro.kty/-numbery/as-long.html","searchKeys":["asLong","open override val asLong: Long","nz.adjmunro.kty.Numbery.asLong"]},{"name":"open override val compareByNumber: DifferenceAB<BackingField, Number>","description":"nz.adjmunro.kty.Numbery.compareByNumber","location":"kty/nz.adjmunro.kty/-numbery/compare-by-number.html","searchKeys":["compareByNumber","open override val compareByNumber: DifferenceAB<BackingField, Number>","nz.adjmunro.kty.Numbery.compareByNumber"]},{"name":"open override val compareToSelf: Difference<Double>","description":"nz.adjmunro.kty.Doubly.compareToSelf","location":"kty/nz.adjmunro.kty/-doubly/compare-to-self.html","searchKeys":["compareToSelf","open override val compareToSelf: Difference<Double>","nz.adjmunro.kty.Doubly.compareToSelf"]},{"name":"open override val compareToSelf: Difference<Float>","description":"nz.adjmunro.kty.Floaty.compareToSelf","location":"kty/nz.adjmunro.kty/-floaty/compare-to-self.html","searchKeys":["compareToSelf","open override val compareToSelf: Difference<Float>","nz.adjmunro.kty.Floaty.compareToSelf"]},{"name":"open override val compareToSelf: Difference<Int>","description":"nz.adjmunro.kty.Inty.compareToSelf","location":"kty/nz.adjmunro.kty/-inty/compare-to-self.html","searchKeys":["compareToSelf","open override val compareToSelf: Difference<Int>","nz.adjmunro.kty.Inty.compareToSelf"]},{"name":"open override val compareToSelf: Difference<Long>","description":"nz.adjmunro.kty.Longy.compareToSelf","location":"kty/nz.adjmunro.kty/-longy/compare-to-self.html","searchKeys":["compareToSelf","open override val compareToSelf: Difference<Long>","nz.adjmunro.kty.Longy.compareToSelf"]},{"name":"open override val compareToSelf: Difference<String>","description":"nz.adjmunro.kty.Stringy.compareToSelf","location":"kty/nz.adjmunro.kty/-stringy/compare-to-self.html","searchKeys":["compareToSelf","open override val compareToSelf: Difference<String>","nz.adjmunro.kty.Stringy.compareToSelf"]},{"name":"open override val decrement: Transform<Double>","description":"nz.adjmunro.kty.Doubly.decrement","location":"kty/nz.adjmunro.kty/-doubly/decrement.html","searchKeys":["decrement","open override val decrement: Transform<Double>","nz.adjmunro.kty.Doubly.decrement"]},{"name":"open override val decrement: Transform<Float>","description":"nz.adjmunro.kty.Floaty.decrement","location":"kty/nz.adjmunro.kty/-floaty/decrement.html","searchKeys":["decrement","open override val decrement: Transform<Float>","nz.adjmunro.kty.Floaty.decrement"]},{"name":"open override val decrement: Transform<Int>","description":"nz.adjmunro.kty.Inty.decrement","location":"kty/nz.adjmunro.kty/-inty/decrement.html","searchKeys":["decrement","open override val decrement: Transform<Int>","nz.adjmunro.kty.Inty.decrement"]},{"name":"open override val decrement: Transform<Long>","description":"nz.adjmunro.kty.Longy.decrement","location":"kty/nz.adjmunro.kty/-longy/decrement.html","searchKeys":["decrement","open override val decrement: Transform<Long>","nz.adjmunro.kty.Longy.decrement"]},{"name":"open override val divide: Merge<Double>","description":"nz.adjmunro.kty.Doubly.divide","location":"kty/nz.adjmunro.kty/-doubly/divide.html","searchKeys":["divide","open override val divide: Merge<Double>","nz.adjmunro.kty.Doubly.divide"]},{"name":"open override val divide: Merge<Float>","description":"nz.adjmunro.kty.Floaty.divide","location":"kty/nz.adjmunro.kty/-floaty/divide.html","searchKeys":["divide","open override val divide: Merge<Float>","nz.adjmunro.kty.Floaty.divide"]},{"name":"open override val divide: Merge<Int>","description":"nz.adjmunro.kty.Inty.divide","location":"kty/nz.adjmunro.kty/-inty/divide.html","searchKeys":["divide","open override val divide: Merge<Int>","nz.adjmunro.kty.Inty.divide"]},{"name":"open override val divide: Merge<Long>","description":"nz.adjmunro.kty.Longy.divide","location":"kty/nz.adjmunro.kty/-longy/divide.html","searchKeys":["divide","open override val divide: Merge<Long>","nz.adjmunro.kty.Longy.divide"]},{"name":"open override val divide: Merge<Tuple2<BackingField>>","description":"nz.adjmunro.kty.tuple.numbery.Numbery2D.divide","location":"kty/nz.adjmunro.kty.tuple.numbery/-numbery2-d/divide.html","searchKeys":["divide","open override val divide: Merge<Tuple2<BackingField>>","nz.adjmunro.kty.tuple.numbery.Numbery2D.divide"]},{"name":"open override val divide: Merge<Tuple3<BackingField>>","description":"nz.adjmunro.kty.tuple.numbery.Numbery3D.divide","location":"kty/nz.adjmunro.kty.tuple.numbery/-numbery3-d/divide.html","searchKeys":["divide","open override val divide: Merge<Tuple3<BackingField>>","nz.adjmunro.kty.tuple.numbery.Numbery3D.divide"]},{"name":"open override val divide: Merge<Tuple4<BackingField>>","description":"nz.adjmunro.kty.tuple.numbery.Numbery4D.divide","location":"kty/nz.adjmunro.kty.tuple.numbery/-numbery4-d/divide.html","searchKeys":["divide","open override val divide: Merge<Tuple4<BackingField>>","nz.adjmunro.kty.tuple.numbery.Numbery4D.divide"]},{"name":"open override val divide: Merge<Tuple5<BackingField>>","description":"nz.adjmunro.kty.tuple.numbery.Numbery5D.divide","location":"kty/nz.adjmunro.kty.tuple.numbery/-numbery5-d/divide.html","searchKeys":["divide","open override val divide: Merge<Tuple5<BackingField>>","nz.adjmunro.kty.tuple.numbery.Numbery5D.divide"]},{"name":"open override val divideByNumber: MergeABtoA<BackingField, Number>","description":"nz.adjmunro.kty.Numbery.divideByNumber","location":"kty/nz.adjmunro.kty/-numbery/divide-by-number.html","searchKeys":["divideByNumber","open override val divideByNumber: MergeABtoA<BackingField, Number>","nz.adjmunro.kty.Numbery.divideByNumber"]},{"name":"open override val divideByNumber: MergeABtoA<Tuple2<BackingField>, Number>","description":"nz.adjmunro.kty.tuple.numbery.Numbery2D.divideByNumber","location":"kty/nz.adjmunro.kty.tuple.numbery/-numbery2-d/divide-by-number.html","searchKeys":["divideByNumber","open override val divideByNumber: MergeABtoA<Tuple2<BackingField>, Number>","nz.adjmunro.kty.tuple.numbery.Numbery2D.divideByNumber"]},{"name":"open override val divideByNumber: MergeABtoA<Tuple3<BackingField>, Number>","description":"nz.adjmunro.kty.tuple.numbery.Numbery3D.divideByNumber","location":"kty/nz.adjmunro.kty.tuple.numbery/-numbery3-d/divide-by-number.html","searchKeys":["divideByNumber","open override val divideByNumber: MergeABtoA<Tuple3<BackingField>, Number>","nz.adjmunro.kty.tuple.numbery.Numbery3D.divideByNumber"]},{"name":"open override val divideByNumber: MergeABtoA<Tuple4<BackingField>, Number>","description":"nz.adjmunro.kty.tuple.numbery.Numbery4D.divideByNumber","location":"kty/nz.adjmunro.kty.tuple.numbery/-numbery4-d/divide-by-number.html","searchKeys":["divideByNumber","open override val divideByNumber: MergeABtoA<Tuple4<BackingField>, Number>","nz.adjmunro.kty.tuple.numbery.Numbery4D.divideByNumber"]},{"name":"open override val divideByNumber: MergeABtoA<Tuple5<BackingField>, Number>","description":"nz.adjmunro.kty.tuple.numbery.Numbery5D.divideByNumber","location":"kty/nz.adjmunro.kty.tuple.numbery/-numbery5-d/divide-by-number.html","searchKeys":["divideByNumber","open override val divideByNumber: MergeABtoA<Tuple5<BackingField>, Number>","nz.adjmunro.kty.tuple.numbery.Numbery5D.divideByNumber"]},{"name":"open override val increment: Transform<Double>","description":"nz.adjmunro.kty.Doubly.increment","location":"kty/nz.adjmunro.kty/-doubly/increment.html","searchKeys":["increment","open override val increment: Transform<Double>","nz.adjmunro.kty.Doubly.increment"]},{"name":"open override val increment: Transform<Float>","description":"nz.adjmunro.kty.Floaty.increment","location":"kty/nz.adjmunro.kty/-floaty/increment.html","searchKeys":["increment","open override val increment: Transform<Float>","nz.adjmunro.kty.Floaty.increment"]},{"name":"open override val increment: Transform<Int>","description":"nz.adjmunro.kty.Inty.increment","location":"kty/nz.adjmunro.kty/-inty/increment.html","searchKeys":["increment","open override val increment: Transform<Int>","nz.adjmunro.kty.Inty.increment"]},{"name":"open override val increment: Transform<Long>","description":"nz.adjmunro.kty.Longy.increment","location":"kty/nz.adjmunro.kty/-longy/increment.html","searchKeys":["increment","open override val increment: Transform<Long>","nz.adjmunro.kty.Longy.increment"]},{"name":"open override val length: Int","description":"nz.adjmunro.kty.Stringy.length","location":"kty/nz.adjmunro.kty/-stringy/length.html","searchKeys":["length","open override val length: Int","nz.adjmunro.kty.Stringy.length"]},{"name":"open override val minus: Merge<Double>","description":"nz.adjmunro.kty.Doubly.minus","location":"kty/nz.adjmunro.kty/-doubly/minus.html","searchKeys":["minus","open override val minus: Merge<Double>","nz.adjmunro.kty.Doubly.minus"]},{"name":"open override val minus: Merge<Float>","description":"nz.adjmunro.kty.Floaty.minus","location":"kty/nz.adjmunro.kty/-floaty/minus.html","searchKeys":["minus","open override val minus: Merge<Float>","nz.adjmunro.kty.Floaty.minus"]},{"name":"open override val minus: Merge<Int>","description":"nz.adjmunro.kty.Inty.minus","location":"kty/nz.adjmunro.kty/-inty/minus.html","searchKeys":["minus","open override val minus: Merge<Int>","nz.adjmunro.kty.Inty.minus"]},{"name":"open override val minus: Merge<Long>","description":"nz.adjmunro.kty.Longy.minus","location":"kty/nz.adjmunro.kty/-longy/minus.html","searchKeys":["minus","open override val minus: Merge<Long>","nz.adjmunro.kty.Longy.minus"]},{"name":"open override val minus: Merge<Tuple2<BackingField>>","description":"nz.adjmunro.kty.tuple.numbery.Numbery2D.minus","location":"kty/nz.adjmunro.kty.tuple.numbery/-numbery2-d/minus.html","searchKeys":["minus","open override val minus: Merge<Tuple2<BackingField>>","nz.adjmunro.kty.tuple.numbery.Numbery2D.minus"]},{"name":"open override val minus: Merge<Tuple3<BackingField>>","description":"nz.adjmunro.kty.tuple.numbery.Numbery3D.minus","location":"kty/nz.adjmunro.kty.tuple.numbery/-numbery3-d/minus.html","searchKeys":["minus","open override val minus: Merge<Tuple3<BackingField>>","nz.adjmunro.kty.tuple.numbery.Numbery3D.minus"]},{"name":"open override val minus: Merge<Tuple4<BackingField>>","description":"nz.adjmunro.kty.tuple.numbery.Numbery4D.minus","location":"kty/nz.adjmunro.kty.tuple.numbery/-numbery4-d/minus.html","searchKeys":["minus","open override val minus: Merge<Tuple4<BackingField>>","nz.adjmunro.kty.tuple.numbery.Numbery4D.minus"]},{"name":"open override val minus: Merge<Tuple5<BackingField>>","description":"nz.adjmunro.kty.tuple.numbery.Numbery5D.minus","location":"kty/nz.adjmunro.kty.tuple.numbery/-numbery5-d/minus.html","searchKeys":["minus","open override val minus: Merge<Tuple5<BackingField>>","nz.adjmunro.kty.tuple.numbery.Numbery5D.minus"]},{"name":"open override val multiplyByNumber: MergeABtoA<BackingField, Number>","description":"nz.adjmunro.kty.Numbery.multiplyByNumber","location":"kty/nz.adjmunro.kty/-numbery/multiply-by-number.html","searchKeys":["multiplyByNumber","open override val multiplyByNumber: MergeABtoA<BackingField, Number>","nz.adjmunro.kty.Numbery.multiplyByNumber"]},{"name":"open override val multiplyByNumber: MergeABtoA<Tuple2<BackingField>, Number>","description":"nz.adjmunro.kty.tuple.numbery.Numbery2D.multiplyByNumber","location":"kty/nz.adjmunro.kty.tuple.numbery/-numbery2-d/multiply-by-number.html","searchKeys":["multiplyByNumber","open override val multiplyByNumber: MergeABtoA<Tuple2<BackingField>, Number>","nz.adjmunro.kty.tuple.numbery.Numbery2D.multiplyByNumber"]},{"name":"open override val multiplyByNumber: MergeABtoA<Tuple3<BackingField>, Number>","description":"nz.adjmunro.kty.tuple.numbery.Numbery3D.multiplyByNumber","location":"kty/nz.adjmunro.kty.tuple.numbery/-numbery3-d/multiply-by-number.html","searchKeys":["multiplyByNumber","open override val multiplyByNumber: MergeABtoA<Tuple3<BackingField>, Number>","nz.adjmunro.kty.tuple.numbery.Numbery3D.multiplyByNumber"]},{"name":"open override val multiplyByNumber: MergeABtoA<Tuple4<BackingField>, Number>","description":"nz.adjmunro.kty.tuple.numbery.Numbery4D.multiplyByNumber","location":"kty/nz.adjmunro.kty.tuple.numbery/-numbery4-d/multiply-by-number.html","searchKeys":["multiplyByNumber","open override val multiplyByNumber: MergeABtoA<Tuple4<BackingField>, Number>","nz.adjmunro.kty.tuple.numbery.Numbery4D.multiplyByNumber"]},{"name":"open override val multiplyByNumber: MergeABtoA<Tuple5<BackingField>, Number>","description":"nz.adjmunro.kty.tuple.numbery.Numbery5D.multiplyByNumber","location":"kty/nz.adjmunro.kty.tuple.numbery/-numbery5-d/multiply-by-number.html","searchKeys":["multiplyByNumber","open override val multiplyByNumber: MergeABtoA<Tuple5<BackingField>, Number>","nz.adjmunro.kty.tuple.numbery.Numbery5D.multiplyByNumber"]},{"name":"open override val negate: Transform<Double>","description":"nz.adjmunro.kty.Doubly.negate","location":"kty/nz.adjmunro.kty/-doubly/negate.html","searchKeys":["negate","open override val negate: Transform<Double>","nz.adjmunro.kty.Doubly.negate"]},{"name":"open override val negate: Transform<Float>","description":"nz.adjmunro.kty.Floaty.negate","location":"kty/nz.adjmunro.kty/-floaty/negate.html","searchKeys":["negate","open override val negate: Transform<Float>","nz.adjmunro.kty.Floaty.negate"]},{"name":"open override val negate: Transform<Int>","description":"nz.adjmunro.kty.Inty.negate","location":"kty/nz.adjmunro.kty/-inty/negate.html","searchKeys":["negate","open override val negate: Transform<Int>","nz.adjmunro.kty.Inty.negate"]},{"name":"open override val negate: Transform<Long>","description":"nz.adjmunro.kty.Longy.negate","location":"kty/nz.adjmunro.kty/-longy/negate.html","searchKeys":["negate","open override val negate: Transform<Long>","nz.adjmunro.kty.Longy.negate"]},{"name":"open override val plus: Merge<Double>","description":"nz.adjmunro.kty.Doubly.plus","location":"kty/nz.adjmunro.kty/-doubly/plus.html","searchKeys":["plus","open override val plus: Merge<Double>","nz.adjmunro.kty.Doubly.plus"]},{"name":"open override val plus: Merge<Float>","description":"nz.adjmunro.kty.Floaty.plus","location":"kty/nz.adjmunro.kty/-floaty/plus.html","searchKeys":["plus","open override val plus: Merge<Float>","nz.adjmunro.kty.Floaty.plus"]},{"name":"open override val plus: Merge<Int>","description":"nz.adjmunro.kty.Inty.plus","location":"kty/nz.adjmunro.kty/-inty/plus.html","searchKeys":["plus","open override val plus: Merge<Int>","nz.adjmunro.kty.Inty.plus"]},{"name":"open override val plus: Merge<Long>","description":"nz.adjmunro.kty.Longy.plus","location":"kty/nz.adjmunro.kty/-longy/plus.html","searchKeys":["plus","open override val plus: Merge<Long>","nz.adjmunro.kty.Longy.plus"]},{"name":"open override val plus: Merge<String>","description":"nz.adjmunro.kty.MutableStringy.plus","location":"kty/nz.adjmunro.kty/-mutable-stringy/plus.html","searchKeys":["plus","open override val plus: Merge<String>","nz.adjmunro.kty.MutableStringy.plus"]},{"name":"open override val plus: Merge<Tuple2<BackingField>>","description":"nz.adjmunro.kty.tuple.numbery.Numbery2D.plus","location":"kty/nz.adjmunro.kty.tuple.numbery/-numbery2-d/plus.html","searchKeys":["plus","open override val plus: Merge<Tuple2<BackingField>>","nz.adjmunro.kty.tuple.numbery.Numbery2D.plus"]},{"name":"open override val plus: Merge<Tuple3<BackingField>>","description":"nz.adjmunro.kty.tuple.numbery.Numbery3D.plus","location":"kty/nz.adjmunro.kty.tuple.numbery/-numbery3-d/plus.html","searchKeys":["plus","open override val plus: Merge<Tuple3<BackingField>>","nz.adjmunro.kty.tuple.numbery.Numbery3D.plus"]},{"name":"open override val plus: Merge<Tuple4<BackingField>>","description":"nz.adjmunro.kty.tuple.numbery.Numbery4D.plus","location":"kty/nz.adjmunro.kty.tuple.numbery/-numbery4-d/plus.html","searchKeys":["plus","open override val plus: Merge<Tuple4<BackingField>>","nz.adjmunro.kty.tuple.numbery.Numbery4D.plus"]},{"name":"open override val plus: Merge<Tuple5<BackingField>>","description":"nz.adjmunro.kty.tuple.numbery.Numbery5D.plus","location":"kty/nz.adjmunro.kty.tuple.numbery/-numbery5-d/plus.html","searchKeys":["plus","open override val plus: Merge<Tuple5<BackingField>>","nz.adjmunro.kty.tuple.numbery.Numbery5D.plus"]},{"name":"open override val reconstruct: (Double) -> Angle.Degrees","description":"nz.adjmunro.kty.Angle.Degrees.reconstruct","location":"kty/nz.adjmunro.kty/-angle/-degrees/reconstruct.html","searchKeys":["reconstruct","open override val reconstruct: (Double) -> Angle.Degrees","nz.adjmunro.kty.Angle.Degrees.reconstruct"]},{"name":"open override val reconstruct: (Double) -> Angle.Radians","description":"nz.adjmunro.kty.Angle.Radians.reconstruct","location":"kty/nz.adjmunro.kty/-angle/-radians/reconstruct.html","searchKeys":["reconstruct","open override val reconstruct: (Double) -> Angle.Radians","nz.adjmunro.kty.Angle.Radians.reconstruct"]},{"name":"open override val reconstruct: (Tuple2<BackingField>) -> ActualWrapper","description":"nz.adjmunro.kty.tuple.numbery.Numbery2D.reconstruct","location":"kty/nz.adjmunro.kty.tuple.numbery/-numbery2-d/reconstruct.html","searchKeys":["reconstruct","open override val reconstruct: (Tuple2<BackingField>) -> ActualWrapper","nz.adjmunro.kty.tuple.numbery.Numbery2D.reconstruct"]},{"name":"open override val reconstruct: (Tuple3<BackingField>) -> ActualWrapper","description":"nz.adjmunro.kty.tuple.numbery.Numbery3D.reconstruct","location":"kty/nz.adjmunro.kty.tuple.numbery/-numbery3-d/reconstruct.html","searchKeys":["reconstruct","open override val reconstruct: (Tuple3<BackingField>) -> ActualWrapper","nz.adjmunro.kty.tuple.numbery.Numbery3D.reconstruct"]},{"name":"open override val reconstruct: (Tuple4<BackingField>) -> ActualWrapper","description":"nz.adjmunro.kty.tuple.numbery.Numbery4D.reconstruct","location":"kty/nz.adjmunro.kty.tuple.numbery/-numbery4-d/reconstruct.html","searchKeys":["reconstruct","open override val reconstruct: (Tuple4<BackingField>) -> ActualWrapper","nz.adjmunro.kty.tuple.numbery.Numbery4D.reconstruct"]},{"name":"open override val reconstruct: (Tuple5<BackingField>) -> ActualWrapper","description":"nz.adjmunro.kty.tuple.numbery.Numbery5D.reconstruct","location":"kty/nz.adjmunro.kty.tuple.numbery/-numbery5-d/reconstruct.html","searchKeys":["reconstruct","open override val reconstruct: (Tuple5<BackingField>) -> ActualWrapper","nz.adjmunro.kty.tuple.numbery.Numbery5D.reconstruct"]},{"name":"open override val remainder: Merge<Double>","description":"nz.adjmunro.kty.Doubly.remainder","location":"kty/nz.adjmunro.kty/-doubly/remainder.html","searchKeys":["remainder","open override val remainder: Merge<Double>","nz.adjmunro.kty.Doubly.remainder"]},{"name":"open override val remainder: Merge<Float>","description":"nz.adjmunro.kty.Floaty.remainder","location":"kty/nz.adjmunro.kty/-floaty/remainder.html","searchKeys":["remainder","open override val remainder: Merge<Float>","nz.adjmunro.kty.Floaty.remainder"]},{"name":"open override val remainder: Merge<Int>","description":"nz.adjmunro.kty.Inty.remainder","location":"kty/nz.adjmunro.kty/-inty/remainder.html","searchKeys":["remainder","open override val remainder: Merge<Int>","nz.adjmunro.kty.Inty.remainder"]},{"name":"open override val remainder: Merge<Long>","description":"nz.adjmunro.kty.Longy.remainder","location":"kty/nz.adjmunro.kty/-longy/remainder.html","searchKeys":["remainder","open override val remainder: Merge<Long>","nz.adjmunro.kty.Longy.remainder"]},{"name":"open override val remainder: Merge<Tuple2<BackingField>>","description":"nz.adjmunro.kty.tuple.numbery.Numbery2D.remainder","location":"kty/nz.adjmunro.kty.tuple.numbery/-numbery2-d/remainder.html","searchKeys":["remainder","open override val remainder: Merge<Tuple2<BackingField>>","nz.adjmunro.kty.tuple.numbery.Numbery2D.remainder"]},{"name":"open override val remainder: Merge<Tuple3<BackingField>>","description":"nz.adjmunro.kty.tuple.numbery.Numbery3D.remainder","location":"kty/nz.adjmunro.kty.tuple.numbery/-numbery3-d/remainder.html","searchKeys":["remainder","open override val remainder: Merge<Tuple3<BackingField>>","nz.adjmunro.kty.tuple.numbery.Numbery3D.remainder"]},{"name":"open override val remainder: Merge<Tuple4<BackingField>>","description":"nz.adjmunro.kty.tuple.numbery.Numbery4D.remainder","location":"kty/nz.adjmunro.kty.tuple.numbery/-numbery4-d/remainder.html","searchKeys":["remainder","open override val remainder: Merge<Tuple4<BackingField>>","nz.adjmunro.kty.tuple.numbery.Numbery4D.remainder"]},{"name":"open override val remainder: Merge<Tuple5<BackingField>>","description":"nz.adjmunro.kty.tuple.numbery.Numbery5D.remainder","location":"kty/nz.adjmunro.kty.tuple.numbery/-numbery5-d/remainder.html","searchKeys":["remainder","open override val remainder: Merge<Tuple5<BackingField>>","nz.adjmunro.kty.tuple.numbery.Numbery5D.remainder"]},{"name":"open override val remainderByNumber: MergeABtoA<BackingField, Number>","description":"nz.adjmunro.kty.Numbery.remainderByNumber","location":"kty/nz.adjmunro.kty/-numbery/remainder-by-number.html","searchKeys":["remainderByNumber","open override val remainderByNumber: MergeABtoA<BackingField, Number>","nz.adjmunro.kty.Numbery.remainderByNumber"]},{"name":"open override val remainderByNumber: MergeABtoA<Tuple2<BackingField>, Number>","description":"nz.adjmunro.kty.tuple.numbery.Numbery2D.remainderByNumber","location":"kty/nz.adjmunro.kty.tuple.numbery/-numbery2-d/remainder-by-number.html","searchKeys":["remainderByNumber","open override val remainderByNumber: MergeABtoA<Tuple2<BackingField>, Number>","nz.adjmunro.kty.tuple.numbery.Numbery2D.remainderByNumber"]},{"name":"open override val remainderByNumber: MergeABtoA<Tuple3<BackingField>, Number>","description":"nz.adjmunro.kty.tuple.numbery.Numbery3D.remainderByNumber","location":"kty/nz.adjmunro.kty.tuple.numbery/-numbery3-d/remainder-by-number.html","searchKeys":["remainderByNumber","open override val remainderByNumber: MergeABtoA<Tuple3<BackingField>, Number>","nz.adjmunro.kty.tuple.numbery.Numbery3D.remainderByNumber"]},{"name":"open override val remainderByNumber: MergeABtoA<Tuple4<BackingField>, Number>","description":"nz.adjmunro.kty.tuple.numbery.Numbery4D.remainderByNumber","location":"kty/nz.adjmunro.kty.tuple.numbery/-numbery4-d/remainder-by-number.html","searchKeys":["remainderByNumber","open override val remainderByNumber: MergeABtoA<Tuple4<BackingField>, Number>","nz.adjmunro.kty.tuple.numbery.Numbery4D.remainderByNumber"]},{"name":"open override val remainderByNumber: MergeABtoA<Tuple5<BackingField>, Number>","description":"nz.adjmunro.kty.tuple.numbery.Numbery5D.remainderByNumber","location":"kty/nz.adjmunro.kty.tuple.numbery/-numbery5-d/remainder-by-number.html","searchKeys":["remainderByNumber","open override val remainderByNumber: MergeABtoA<Tuple5<BackingField>, Number>","nz.adjmunro.kty.tuple.numbery.Numbery5D.remainderByNumber"]},{"name":"open override val roundToInt: () -> Int","description":"nz.adjmunro.kty.Doubly.roundToInt","location":"kty/nz.adjmunro.kty/-doubly/round-to-int.html","searchKeys":["roundToInt","open override val roundToInt: () -> Int","nz.adjmunro.kty.Doubly.roundToInt"]},{"name":"open override val roundToInt: () -> Int","description":"nz.adjmunro.kty.Floaty.roundToInt","location":"kty/nz.adjmunro.kty/-floaty/round-to-int.html","searchKeys":["roundToInt","open override val roundToInt: () -> Int","nz.adjmunro.kty.Floaty.roundToInt"]},{"name":"open override val roundToLong: () -> Long","description":"nz.adjmunro.kty.Doubly.roundToLong","location":"kty/nz.adjmunro.kty/-doubly/round-to-long.html","searchKeys":["roundToLong","open override val roundToLong: () -> Long","nz.adjmunro.kty.Doubly.roundToLong"]},{"name":"open override val roundToLong: () -> Long","description":"nz.adjmunro.kty.Floaty.roundToLong","location":"kty/nz.adjmunro.kty/-floaty/round-to-long.html","searchKeys":["roundToLong","open override val roundToLong: () -> Long","nz.adjmunro.kty.Floaty.roundToLong"]},{"name":"open override val sign: W","description":"nz.adjmunro.kty.Doubly.sign","location":"kty/nz.adjmunro.kty/-doubly/sign.html","searchKeys":["sign","open override val sign: W","nz.adjmunro.kty.Doubly.sign"]},{"name":"open override val sign: W","description":"nz.adjmunro.kty.Floaty.sign","location":"kty/nz.adjmunro.kty/-floaty/sign.html","searchKeys":["sign","open override val sign: W","nz.adjmunro.kty.Floaty.sign"]},{"name":"open override val sign: W","description":"nz.adjmunro.kty.Inty.sign","location":"kty/nz.adjmunro.kty/-inty/sign.html","searchKeys":["sign","open override val sign: W","nz.adjmunro.kty.Inty.sign"]},{"name":"open override val sign: W","description":"nz.adjmunro.kty.Longy.sign","location":"kty/nz.adjmunro.kty/-longy/sign.html","searchKeys":["sign","open override val sign: W","nz.adjmunro.kty.Longy.sign"]},{"name":"open override val size: Int","description":"nz.adjmunro.kty.tuple.Tuple.Tuple2d.size","location":"kty/nz.adjmunro.kty.tuple/-tuple/-tuple2d/size.html","searchKeys":["size","open override val size: Int","nz.adjmunro.kty.tuple.Tuple.Tuple2d.size"]},{"name":"open override val size: Int","description":"nz.adjmunro.kty.tuple.Tuple.Tuple3d.size","location":"kty/nz.adjmunro.kty.tuple/-tuple/-tuple3d/size.html","searchKeys":["size","open override val size: Int","nz.adjmunro.kty.tuple.Tuple.Tuple3d.size"]},{"name":"open override val size: Int","description":"nz.adjmunro.kty.tuple.Tuple.Tuple4d.size","location":"kty/nz.adjmunro.kty.tuple/-tuple/-tuple4d/size.html","searchKeys":["size","open override val size: Int","nz.adjmunro.kty.tuple.Tuple.Tuple4d.size"]},{"name":"open override val size: Int","description":"nz.adjmunro.kty.tuple.Tuple.Tuple5d.size","location":"kty/nz.adjmunro.kty.tuple/-tuple/-tuple5d/size.html","searchKeys":["size","open override val size: Int","nz.adjmunro.kty.tuple.Tuple.Tuple5d.size"]},{"name":"open override val size: Int","description":"nz.adjmunro.kty.tuple.Tuple.Tuple6d.size","location":"kty/nz.adjmunro.kty.tuple/-tuple/-tuple6d/size.html","searchKeys":["size","open override val size: Int","nz.adjmunro.kty.tuple.Tuple.Tuple6d.size"]},{"name":"open override val size: Int","description":"nz.adjmunro.kty.tuple.Tuple.Tuple7d.size","location":"kty/nz.adjmunro.kty.tuple/-tuple/-tuple7d/size.html","searchKeys":["size","open override val size: Int","nz.adjmunro.kty.tuple.Tuple.Tuple7d.size"]},{"name":"open override val size: Int","description":"nz.adjmunro.kty.tuple.Tuple.Tuple8d.size","location":"kty/nz.adjmunro.kty.tuple/-tuple/-tuple8d/size.html","searchKeys":["size","open override val size: Int","nz.adjmunro.kty.tuple.Tuple.Tuple8d.size"]},{"name":"open override val size: Int","description":"nz.adjmunro.kty.tuple.Tuple.Tuple9d.size","location":"kty/nz.adjmunro.kty.tuple/-tuple/-tuple9d/size.html","searchKeys":["size","open override val size: Int","nz.adjmunro.kty.tuple.Tuple.Tuple9d.size"]},{"name":"open override val spec: (Number) -> Double","description":"nz.adjmunro.kty.Doubly.spec","location":"kty/nz.adjmunro.kty/-doubly/spec.html","searchKeys":["spec","open override val spec: (Number) -> Double","nz.adjmunro.kty.Doubly.spec"]},{"name":"open override val spec: (Number) -> Float","description":"nz.adjmunro.kty.Floaty.spec","location":"kty/nz.adjmunro.kty/-floaty/spec.html","searchKeys":["spec","open override val spec: (Number) -> Float","nz.adjmunro.kty.Floaty.spec"]},{"name":"open override val spec: (Number) -> Int","description":"nz.adjmunro.kty.Inty.spec","location":"kty/nz.adjmunro.kty/-inty/spec.html","searchKeys":["spec","open override val spec: (Number) -> Int","nz.adjmunro.kty.Inty.spec"]},{"name":"open override val spec: (Number) -> Long","description":"nz.adjmunro.kty.Longy.spec","location":"kty/nz.adjmunro.kty/-longy/spec.html","searchKeys":["spec","open override val spec: (Number) -> Long","nz.adjmunro.kty.Longy.spec"]},{"name":"open override val subtractByNumber: MergeABtoA<BackingField, Number>","description":"nz.adjmunro.kty.Numbery.subtractByNumber","location":"kty/nz.adjmunro.kty/-numbery/subtract-by-number.html","searchKeys":["subtractByNumber","open override val subtractByNumber: MergeABtoA<BackingField, Number>","nz.adjmunro.kty.Numbery.subtractByNumber"]},{"name":"open override val subtractByNumber: MergeABtoA<Tuple2<BackingField>, Number>","description":"nz.adjmunro.kty.tuple.numbery.Numbery2D.subtractByNumber","location":"kty/nz.adjmunro.kty.tuple.numbery/-numbery2-d/subtract-by-number.html","searchKeys":["subtractByNumber","open override val subtractByNumber: MergeABtoA<Tuple2<BackingField>, Number>","nz.adjmunro.kty.tuple.numbery.Numbery2D.subtractByNumber"]},{"name":"open override val subtractByNumber: MergeABtoA<Tuple3<BackingField>, Number>","description":"nz.adjmunro.kty.tuple.numbery.Numbery3D.subtractByNumber","location":"kty/nz.adjmunro.kty.tuple.numbery/-numbery3-d/subtract-by-number.html","searchKeys":["subtractByNumber","open override val subtractByNumber: MergeABtoA<Tuple3<BackingField>, Number>","nz.adjmunro.kty.tuple.numbery.Numbery3D.subtractByNumber"]},{"name":"open override val subtractByNumber: MergeABtoA<Tuple4<BackingField>, Number>","description":"nz.adjmunro.kty.tuple.numbery.Numbery4D.subtractByNumber","location":"kty/nz.adjmunro.kty.tuple.numbery/-numbery4-d/subtract-by-number.html","searchKeys":["subtractByNumber","open override val subtractByNumber: MergeABtoA<Tuple4<BackingField>, Number>","nz.adjmunro.kty.tuple.numbery.Numbery4D.subtractByNumber"]},{"name":"open override val subtractByNumber: MergeABtoA<Tuple5<BackingField>, Number>","description":"nz.adjmunro.kty.tuple.numbery.Numbery5D.subtractByNumber","location":"kty/nz.adjmunro.kty.tuple.numbery/-numbery5-d/subtract-by-number.html","searchKeys":["subtractByNumber","open override val subtractByNumber: MergeABtoA<Tuple5<BackingField>, Number>","nz.adjmunro.kty.tuple.numbery.Numbery5D.subtractByNumber"]},{"name":"open override val times: Merge<Double>","description":"nz.adjmunro.kty.Doubly.times","location":"kty/nz.adjmunro.kty/-doubly/times.html","searchKeys":["times","open override val times: Merge<Double>","nz.adjmunro.kty.Doubly.times"]},{"name":"open override val times: Merge<Float>","description":"nz.adjmunro.kty.Floaty.times","location":"kty/nz.adjmunro.kty/-floaty/times.html","searchKeys":["times","open override val times: Merge<Float>","nz.adjmunro.kty.Floaty.times"]},{"name":"open override val times: Merge<Int>","description":"nz.adjmunro.kty.Inty.times","location":"kty/nz.adjmunro.kty/-inty/times.html","searchKeys":["times","open override val times: Merge<Int>","nz.adjmunro.kty.Inty.times"]},{"name":"open override val times: Merge<Long>","description":"nz.adjmunro.kty.Longy.times","location":"kty/nz.adjmunro.kty/-longy/times.html","searchKeys":["times","open override val times: Merge<Long>","nz.adjmunro.kty.Longy.times"]},{"name":"open override val times: Merge<Tuple2<BackingField>>","description":"nz.adjmunro.kty.tuple.numbery.Numbery2D.times","location":"kty/nz.adjmunro.kty.tuple.numbery/-numbery2-d/times.html","searchKeys":["times","open override val times: Merge<Tuple2<BackingField>>","nz.adjmunro.kty.tuple.numbery.Numbery2D.times"]},{"name":"open override val times: Merge<Tuple3<BackingField>>","description":"nz.adjmunro.kty.tuple.numbery.Numbery3D.times","location":"kty/nz.adjmunro.kty.tuple.numbery/-numbery3-d/times.html","searchKeys":["times","open override val times: Merge<Tuple3<BackingField>>","nz.adjmunro.kty.tuple.numbery.Numbery3D.times"]},{"name":"open override val times: Merge<Tuple4<BackingField>>","description":"nz.adjmunro.kty.tuple.numbery.Numbery4D.times","location":"kty/nz.adjmunro.kty.tuple.numbery/-numbery4-d/times.html","searchKeys":["times","open override val times: Merge<Tuple4<BackingField>>","nz.adjmunro.kty.tuple.numbery.Numbery4D.times"]},{"name":"open override val times: Merge<Tuple5<BackingField>>","description":"nz.adjmunro.kty.tuple.numbery.Numbery5D.times","location":"kty/nz.adjmunro.kty.tuple.numbery/-numbery5-d/times.html","searchKeys":["times","open override val times: Merge<Tuple5<BackingField>>","nz.adjmunro.kty.tuple.numbery.Numbery5D.times"]},{"name":"open override val value: Double","description":"nz.adjmunro.kty.Angle.Degrees.value","location":"kty/nz.adjmunro.kty/-angle/-degrees/value.html","searchKeys":["value","open override val value: Double","nz.adjmunro.kty.Angle.Degrees.value"]},{"name":"open override val value: Double","description":"nz.adjmunro.kty.Angle.Radians.value","location":"kty/nz.adjmunro.kty/-angle/-radians/value.html","searchKeys":["value","open override val value: Double","nz.adjmunro.kty.Angle.Radians.value"]},{"name":"open override val value: Tuple2<BackingField>","description":"nz.adjmunro.kty.tuple.numbery.Numbery2D.value","location":"kty/nz.adjmunro.kty.tuple.numbery/-numbery2-d/value.html","searchKeys":["value","open override val value: Tuple2<BackingField>","nz.adjmunro.kty.tuple.numbery.Numbery2D.value"]},{"name":"open override val value: Tuple3<BackingField>","description":"nz.adjmunro.kty.tuple.numbery.Numbery3D.value","location":"kty/nz.adjmunro.kty.tuple.numbery/-numbery3-d/value.html","searchKeys":["value","open override val value: Tuple3<BackingField>","nz.adjmunro.kty.tuple.numbery.Numbery3D.value"]},{"name":"open override val value: Tuple4<BackingField>","description":"nz.adjmunro.kty.tuple.numbery.Numbery4D.value","location":"kty/nz.adjmunro.kty.tuple.numbery/-numbery4-d/value.html","searchKeys":["value","open override val value: Tuple4<BackingField>","nz.adjmunro.kty.tuple.numbery.Numbery4D.value"]},{"name":"open override val value: Tuple5<BackingField>","description":"nz.adjmunro.kty.tuple.numbery.Numbery5D.value","location":"kty/nz.adjmunro.kty.tuple.numbery/-numbery5-d/value.html","searchKeys":["value","open override val value: Tuple5<BackingField>","nz.adjmunro.kty.tuple.numbery.Numbery5D.value"]},{"name":"operator fun <C> plus(third: C): Truple<A, B, C>","description":"nz.adjmunro.kty.tuple.Duple.plus","location":"kty/nz.adjmunro.kty.tuple/-duple/plus.html","searchKeys":["plus","operator fun <C> plus(third: C): Truple<A, B, C>","nz.adjmunro.kty.tuple.Duple.plus"]},{"name":"operator fun <D> plus(fourth: D): Quadruple<A, B, C, D>","description":"nz.adjmunro.kty.tuple.Truple.plus","location":"kty/nz.adjmunro.kty.tuple/-truple/plus.html","searchKeys":["plus","operator fun <D> plus(fourth: D): Quadruple<A, B, C, D>","nz.adjmunro.kty.tuple.Truple.plus"]},{"name":"operator fun <E> plus(fifth: E): Quintuple<A, B, C, D, E>","description":"nz.adjmunro.kty.tuple.Quadruple.plus","location":"kty/nz.adjmunro.kty.tuple/-quadruple/plus.html","searchKeys":["plus","operator fun <E> plus(fifth: E): Quintuple<A, B, C, D, E>","nz.adjmunro.kty.tuple.Quadruple.plus"]},{"name":"operator fun <F> plus(sixth: F): Sextuple<A, B, C, D, E, F>","description":"nz.adjmunro.kty.tuple.Quintuple.plus","location":"kty/nz.adjmunro.kty.tuple/-quintuple/plus.html","searchKeys":["plus","operator fun <F> plus(sixth: F): Sextuple<A, B, C, D, E, F>","nz.adjmunro.kty.tuple.Quintuple.plus"]},{"name":"operator fun <G> plus(seventh: G): Septuple<A, B, C, D, E, F, G>","description":"nz.adjmunro.kty.tuple.Sextuple.plus","location":"kty/nz.adjmunro.kty.tuple/-sextuple/plus.html","searchKeys":["plus","operator fun <G> plus(seventh: G): Septuple<A, B, C, D, E, F, G>","nz.adjmunro.kty.tuple.Sextuple.plus"]},{"name":"operator fun <H> plus(eighth: H): Octuple<A, B, C, D, E, F, G, H>","description":"nz.adjmunro.kty.tuple.Septuple.plus","location":"kty/nz.adjmunro.kty.tuple/-septuple/plus.html","searchKeys":["plus","operator fun <H> plus(eighth: H): Octuple<A, B, C, D, E, F, G, H>","nz.adjmunro.kty.tuple.Septuple.plus"]},{"name":"operator fun <I> plus(ninth: I): Nonuple<A, B, C, D, E, F, G, H, I>","description":"nz.adjmunro.kty.tuple.Octuple.plus","location":"kty/nz.adjmunro.kty.tuple/-octuple/plus.html","searchKeys":["plus","operator fun <I> plus(ninth: I): Nonuple<A, B, C, D, E, F, G, H, I>","nz.adjmunro.kty.tuple.Octuple.plus"]},{"name":"sealed interface Angle<T : Angle<T>> : Doubly<T> ","description":"nz.adjmunro.kty.Angle","location":"kty/nz.adjmunro.kty/-angle/index.html","searchKeys":["Angle","sealed interface Angle<T : Angle<T>> : Doubly<T> ","nz.adjmunro.kty.Angle"]},{"name":"typealias Tuple2<T> = Tuple.Tuple2d<T, T>","description":"nz.adjmunro.kty.tuple.Tuple2","location":"kty/nz.adjmunro.kty.tuple/-tuple2/index.html","searchKeys":["Tuple2","typealias Tuple2<T> = Tuple.Tuple2d<T, T>","nz.adjmunro.kty.tuple.Tuple2"]},{"name":"typealias Tuple3<T> = Tuple.Tuple3d<T, T, T>","description":"nz.adjmunro.kty.tuple.Tuple3","location":"kty/nz.adjmunro.kty.tuple/-tuple3/index.html","searchKeys":["Tuple3","typealias Tuple3<T> = Tuple.Tuple3d<T, T, T>","nz.adjmunro.kty.tuple.Tuple3"]},{"name":"typealias Tuple4<T> = Tuple.Tuple4d<T, T, T, T>","description":"nz.adjmunro.kty.tuple.Tuple4","location":"kty/nz.adjmunro.kty.tuple/-tuple4/index.html","searchKeys":["Tuple4","typealias Tuple4<T> = Tuple.Tuple4d<T, T, T, T>","nz.adjmunro.kty.tuple.Tuple4"]},{"name":"typealias Tuple5<T> = Tuple.Tuple5d<T, T, T, T, T>","description":"nz.adjmunro.kty.tuple.Tuple5","location":"kty/nz.adjmunro.kty.tuple/-tuple5/index.html","searchKeys":["Tuple5","typealias Tuple5<T> = Tuple.Tuple5d<T, T, T, T, T>","nz.adjmunro.kty.tuple.Tuple5"]},{"name":"typealias Tuple6<T> = Tuple.Tuple6d<T, T, T, T, T, T>","description":"nz.adjmunro.kty.tuple.Tuple6","location":"kty/nz.adjmunro.kty.tuple/-tuple6/index.html","searchKeys":["Tuple6","typealias Tuple6<T> = Tuple.Tuple6d<T, T, T, T, T, T>","nz.adjmunro.kty.tuple.Tuple6"]},{"name":"typealias Tuple7<T> = Tuple.Tuple7d<T, T, T, T, T, T, T>","description":"nz.adjmunro.kty.tuple.Tuple7","location":"kty/nz.adjmunro.kty.tuple/-tuple7/index.html","searchKeys":["Tuple7","typealias Tuple7<T> = Tuple.Tuple7d<T, T, T, T, T, T, T>","nz.adjmunro.kty.tuple.Tuple7"]},{"name":"typealias Tuple8<T> = Tuple.Tuple8d<T, T, T, T, T, T, T, T>","description":"nz.adjmunro.kty.tuple.Tuple8","location":"kty/nz.adjmunro.kty.tuple/-tuple8/index.html","searchKeys":["Tuple8","typealias Tuple8<T> = Tuple.Tuple8d<T, T, T, T, T, T, T, T>","nz.adjmunro.kty.tuple.Tuple8"]},{"name":"typealias Tuple9<T> = Tuple.Tuple9d<T, T, T, T, T, T, T, T, T>","description":"nz.adjmunro.kty.tuple.Tuple9","location":"kty/nz.adjmunro.kty.tuple/-tuple9/index.html","searchKeys":["Tuple9","typealias Tuple9<T> = Tuple.Tuple9d<T, T, T, T, T, T, T, T, T>","nz.adjmunro.kty.tuple.Tuple9"]},{"name":"val Number.degrees: Angle.Degrees","description":"nz.adjmunro.kty.Angle.Companion.degrees","location":"kty/nz.adjmunro.kty/-angle/-companion/degrees.html","searchKeys":["degrees","val Number.degrees: Angle.Degrees","nz.adjmunro.kty.Angle.Companion.degrees"]},{"name":"val Number.radians: Angle.Radians","description":"nz.adjmunro.kty.Angle.Companion.radians","location":"kty/nz.adjmunro.kty/-angle/-companion/radians.html","searchKeys":["radians","val Number.radians: Angle.Radians","nz.adjmunro.kty.Angle.Companion.radians"]},{"name":"val degrees: Angle.Degrees","description":"nz.adjmunro.kty.Angle.Radians.degrees","location":"kty/nz.adjmunro.kty/-angle/-radians/degrees.html","searchKeys":["degrees","val degrees: Angle.Degrees","nz.adjmunro.kty.Angle.Radians.degrees"]},{"name":"val eighth: H","description":"nz.adjmunro.kty.tuple.Nonuple.eighth","location":"kty/nz.adjmunro.kty.tuple/-nonuple/eighth.html","searchKeys":["eighth","val eighth: H","nz.adjmunro.kty.tuple.Nonuple.eighth"]},{"name":"val eighth: H","description":"nz.adjmunro.kty.tuple.Octuple.eighth","location":"kty/nz.adjmunro.kty.tuple/-octuple/eighth.html","searchKeys":["eighth","val eighth: H","nz.adjmunro.kty.tuple.Octuple.eighth"]},{"name":"val fifth: E","description":"nz.adjmunro.kty.tuple.Nonuple.fifth","location":"kty/nz.adjmunro.kty.tuple/-nonuple/fifth.html","searchKeys":["fifth","val fifth: E","nz.adjmunro.kty.tuple.Nonuple.fifth"]},{"name":"val fifth: E","description":"nz.adjmunro.kty.tuple.Octuple.fifth","location":"kty/nz.adjmunro.kty.tuple/-octuple/fifth.html","searchKeys":["fifth","val fifth: E","nz.adjmunro.kty.tuple.Octuple.fifth"]},{"name":"val fifth: E","description":"nz.adjmunro.kty.tuple.Quintuple.fifth","location":"kty/nz.adjmunro.kty.tuple/-quintuple/fifth.html","searchKeys":["fifth","val fifth: E","nz.adjmunro.kty.tuple.Quintuple.fifth"]},{"name":"val fifth: E","description":"nz.adjmunro.kty.tuple.Septuple.fifth","location":"kty/nz.adjmunro.kty.tuple/-septuple/fifth.html","searchKeys":["fifth","val fifth: E","nz.adjmunro.kty.tuple.Septuple.fifth"]},{"name":"val fifth: E","description":"nz.adjmunro.kty.tuple.Sextuple.fifth","location":"kty/nz.adjmunro.kty.tuple/-sextuple/fifth.html","searchKeys":["fifth","val fifth: E","nz.adjmunro.kty.tuple.Sextuple.fifth"]},{"name":"val first: A","description":"nz.adjmunro.kty.tuple.Duple.first","location":"kty/nz.adjmunro.kty.tuple/-duple/first.html","searchKeys":["first","val first: A","nz.adjmunro.kty.tuple.Duple.first"]},{"name":"val first: A","description":"nz.adjmunro.kty.tuple.Nonuple.first","location":"kty/nz.adjmunro.kty.tuple/-nonuple/first.html","searchKeys":["first","val first: A","nz.adjmunro.kty.tuple.Nonuple.first"]},{"name":"val first: A","description":"nz.adjmunro.kty.tuple.Octuple.first","location":"kty/nz.adjmunro.kty.tuple/-octuple/first.html","searchKeys":["first","val first: A","nz.adjmunro.kty.tuple.Octuple.first"]},{"name":"val first: A","description":"nz.adjmunro.kty.tuple.Quadruple.first","location":"kty/nz.adjmunro.kty.tuple/-quadruple/first.html","searchKeys":["first","val first: A","nz.adjmunro.kty.tuple.Quadruple.first"]},{"name":"val first: A","description":"nz.adjmunro.kty.tuple.Quintuple.first","location":"kty/nz.adjmunro.kty.tuple/-quintuple/first.html","searchKeys":["first","val first: A","nz.adjmunro.kty.tuple.Quintuple.first"]},{"name":"val first: A","description":"nz.adjmunro.kty.tuple.Septuple.first","location":"kty/nz.adjmunro.kty.tuple/-septuple/first.html","searchKeys":["first","val first: A","nz.adjmunro.kty.tuple.Septuple.first"]},{"name":"val first: A","description":"nz.adjmunro.kty.tuple.Sextuple.first","location":"kty/nz.adjmunro.kty.tuple/-sextuple/first.html","searchKeys":["first","val first: A","nz.adjmunro.kty.tuple.Sextuple.first"]},{"name":"val first: A","description":"nz.adjmunro.kty.tuple.Truple.first","location":"kty/nz.adjmunro.kty.tuple/-truple/first.html","searchKeys":["first","val first: A","nz.adjmunro.kty.tuple.Truple.first"]},{"name":"val fourth: D","description":"nz.adjmunro.kty.tuple.Nonuple.fourth","location":"kty/nz.adjmunro.kty.tuple/-nonuple/fourth.html","searchKeys":["fourth","val fourth: D","nz.adjmunro.kty.tuple.Nonuple.fourth"]},{"name":"val fourth: D","description":"nz.adjmunro.kty.tuple.Octuple.fourth","location":"kty/nz.adjmunro.kty.tuple/-octuple/fourth.html","searchKeys":["fourth","val fourth: D","nz.adjmunro.kty.tuple.Octuple.fourth"]},{"name":"val fourth: D","description":"nz.adjmunro.kty.tuple.Quadruple.fourth","location":"kty/nz.adjmunro.kty.tuple/-quadruple/fourth.html","searchKeys":["fourth","val fourth: D","nz.adjmunro.kty.tuple.Quadruple.fourth"]},{"name":"val fourth: D","description":"nz.adjmunro.kty.tuple.Quintuple.fourth","location":"kty/nz.adjmunro.kty.tuple/-quintuple/fourth.html","searchKeys":["fourth","val fourth: D","nz.adjmunro.kty.tuple.Quintuple.fourth"]},{"name":"val fourth: D","description":"nz.adjmunro.kty.tuple.Septuple.fourth","location":"kty/nz.adjmunro.kty.tuple/-septuple/fourth.html","searchKeys":["fourth","val fourth: D","nz.adjmunro.kty.tuple.Septuple.fourth"]},{"name":"val fourth: D","description":"nz.adjmunro.kty.tuple.Sextuple.fourth","location":"kty/nz.adjmunro.kty.tuple/-sextuple/fourth.html","searchKeys":["fourth","val fourth: D","nz.adjmunro.kty.tuple.Sextuple.fourth"]},{"name":"val ninth: I","description":"nz.adjmunro.kty.tuple.Nonuple.ninth","location":"kty/nz.adjmunro.kty.tuple/-nonuple/ninth.html","searchKeys":["ninth","val ninth: I","nz.adjmunro.kty.tuple.Nonuple.ninth"]},{"name":"val radians: Angle.Radians","description":"nz.adjmunro.kty.Angle.Degrees.radians","location":"kty/nz.adjmunro.kty/-angle/-degrees/radians.html","searchKeys":["radians","val radians: Angle.Radians","nz.adjmunro.kty.Angle.Degrees.radians"]},{"name":"val second: B","description":"nz.adjmunro.kty.tuple.Duple.second","location":"kty/nz.adjmunro.kty.tuple/-duple/second.html","searchKeys":["second","val second: B","nz.adjmunro.kty.tuple.Duple.second"]},{"name":"val second: B","description":"nz.adjmunro.kty.tuple.Nonuple.second","location":"kty/nz.adjmunro.kty.tuple/-nonuple/second.html","searchKeys":["second","val second: B","nz.adjmunro.kty.tuple.Nonuple.second"]},{"name":"val second: B","description":"nz.adjmunro.kty.tuple.Octuple.second","location":"kty/nz.adjmunro.kty.tuple/-octuple/second.html","searchKeys":["second","val second: B","nz.adjmunro.kty.tuple.Octuple.second"]},{"name":"val second: B","description":"nz.adjmunro.kty.tuple.Quadruple.second","location":"kty/nz.adjmunro.kty.tuple/-quadruple/second.html","searchKeys":["second","val second: B","nz.adjmunro.kty.tuple.Quadruple.second"]},{"name":"val second: B","description":"nz.adjmunro.kty.tuple.Quintuple.second","location":"kty/nz.adjmunro.kty.tuple/-quintuple/second.html","searchKeys":["second","val second: B","nz.adjmunro.kty.tuple.Quintuple.second"]},{"name":"val second: B","description":"nz.adjmunro.kty.tuple.Septuple.second","location":"kty/nz.adjmunro.kty.tuple/-septuple/second.html","searchKeys":["second","val second: B","nz.adjmunro.kty.tuple.Septuple.second"]},{"name":"val second: B","description":"nz.adjmunro.kty.tuple.Sextuple.second","location":"kty/nz.adjmunro.kty.tuple/-sextuple/second.html","searchKeys":["second","val second: B","nz.adjmunro.kty.tuple.Sextuple.second"]},{"name":"val second: B","description":"nz.adjmunro.kty.tuple.Truple.second","location":"kty/nz.adjmunro.kty.tuple/-truple/second.html","searchKeys":["second","val second: B","nz.adjmunro.kty.tuple.Truple.second"]},{"name":"val seventh: G","description":"nz.adjmunro.kty.tuple.Nonuple.seventh","location":"kty/nz.adjmunro.kty.tuple/-nonuple/seventh.html","searchKeys":["seventh","val seventh: G","nz.adjmunro.kty.tuple.Nonuple.seventh"]},{"name":"val seventh: G","description":"nz.adjmunro.kty.tuple.Octuple.seventh","location":"kty/nz.adjmunro.kty.tuple/-octuple/seventh.html","searchKeys":["seventh","val seventh: G","nz.adjmunro.kty.tuple.Octuple.seventh"]},{"name":"val seventh: G","description":"nz.adjmunro.kty.tuple.Septuple.seventh","location":"kty/nz.adjmunro.kty.tuple/-septuple/seventh.html","searchKeys":["seventh","val seventh: G","nz.adjmunro.kty.tuple.Septuple.seventh"]},{"name":"val sixth: F","description":"nz.adjmunro.kty.tuple.Nonuple.sixth","location":"kty/nz.adjmunro.kty.tuple/-nonuple/sixth.html","searchKeys":["sixth","val sixth: F","nz.adjmunro.kty.tuple.Nonuple.sixth"]},{"name":"val sixth: F","description":"nz.adjmunro.kty.tuple.Octuple.sixth","location":"kty/nz.adjmunro.kty.tuple/-octuple/sixth.html","searchKeys":["sixth","val sixth: F","nz.adjmunro.kty.tuple.Octuple.sixth"]},{"name":"val sixth: F","description":"nz.adjmunro.kty.tuple.Septuple.sixth","location":"kty/nz.adjmunro.kty.tuple/-septuple/sixth.html","searchKeys":["sixth","val sixth: F","nz.adjmunro.kty.tuple.Septuple.sixth"]},{"name":"val sixth: F","description":"nz.adjmunro.kty.tuple.Sextuple.sixth","location":"kty/nz.adjmunro.kty.tuple/-sextuple/sixth.html","searchKeys":["sixth","val sixth: F","nz.adjmunro.kty.tuple.Sextuple.sixth"]},{"name":"val third: C","description":"nz.adjmunro.kty.tuple.Nonuple.third","location":"kty/nz.adjmunro.kty.tuple/-nonuple/third.html","searchKeys":["third","val third: C","nz.adjmunro.kty.tuple.Nonuple.third"]},{"name":"val third: C","description":"nz.adjmunro.kty.tuple.Octuple.third","location":"kty/nz.adjmunro.kty.tuple/-octuple/third.html","searchKeys":["third","val third: C","nz.adjmunro.kty.tuple.Octuple.third"]},{"name":"val third: C","description":"nz.adjmunro.kty.tuple.Quadruple.third","location":"kty/nz.adjmunro.kty.tuple/-quadruple/third.html","searchKeys":["third","val third: C","nz.adjmunro.kty.tuple.Quadruple.third"]},{"name":"val third: C","description":"nz.adjmunro.kty.tuple.Quintuple.third","location":"kty/nz.adjmunro.kty.tuple/-quintuple/third.html","searchKeys":["third","val third: C","nz.adjmunro.kty.tuple.Quintuple.third"]},{"name":"val third: C","description":"nz.adjmunro.kty.tuple.Septuple.third","location":"kty/nz.adjmunro.kty.tuple/-septuple/third.html","searchKeys":["third","val third: C","nz.adjmunro.kty.tuple.Septuple.third"]},{"name":"val third: C","description":"nz.adjmunro.kty.tuple.Sextuple.third","location":"kty/nz.adjmunro.kty.tuple/-sextuple/third.html","searchKeys":["third","val third: C","nz.adjmunro.kty.tuple.Sextuple.third"]},{"name":"val third: C","description":"nz.adjmunro.kty.tuple.Truple.third","location":"kty/nz.adjmunro.kty.tuple/-truple/third.html","searchKeys":["third","val third: C","nz.adjmunro.kty.tuple.Truple.third"]},{"name":"value class Degrees(val value: Double) : Angle<Angle.Degrees> ","description":"nz.adjmunro.kty.Angle.Degrees","location":"kty/nz.adjmunro.kty/-angle/-degrees/index.html","searchKeys":["Degrees","value class Degrees(val value: Double) : Angle<Angle.Degrees> ","nz.adjmunro.kty.Angle.Degrees"]},{"name":"value class Radians(val value: Double) : Angle<Angle.Radians> ","description":"nz.adjmunro.kty.Angle.Radians","location":"kty/nz.adjmunro.kty/-angle/-radians/index.html","searchKeys":["Radians","value class Radians(val value: Double) : Angle<Angle.Radians> ","nz.adjmunro.kty.Angle.Radians"]}]